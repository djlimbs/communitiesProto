eval("(function() {\n\n// Add a labels property to every controller so that we don't have to access the global scope (which was deprecated).\nEmber.ControllerMixin.reopen({\n    labels: labels\n});\n\n// Attribute bindings for QA locators so we can easily add them to ember markup.\nEmber.View.reopen({\n    attributeBindings: ['data-dev', 'data-qa', 'data-qa-label', 'data-qa-button', 'data-qa-input', \n                        'data-qa-link', 'data-qa-pane', 'data-qa-select', 'da-qa-modal', 'data-qa-alert',\n                        'data-qa-container'],\n    didInsertElement : function(){\n        this._super();\n\n        Ember.run.scheduleOnce('afterRender', this, this.initJUI);   \n    },\n    initJUI: function() {\n        // Initialize tooltips if they exist. This might actually be expensive since it's run every time a new view is added. Will refactor.\n        /*if ($('[data-toggle=\"tooltip\"]').length > 0) {\n            $('body').tooltip({\n                selector: '[data-toggle=tooltip]'\n            });\n        }*/\n        this.afterRenderEvent();\n    },\n    afterRenderEvent : function() {\n        // implement this hook in your own subclasses and run your jQuery logic there\n    }\n});\n\n})();//@ sourceURL=../app/js/emberBase.js")

eval("(function() {\n\nEmber.TEMPLATES[\"components/twitter\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<div class=\\\"column--md--4\\\" data-qa=\\\"widget\\\">\\n    <div class=\\\"content__section\\\" data-twttr-id=\\\"twttr-sandbox-0\\\">\\n        <h3 class=\\\"mar--sm--tn mar--sm--bm\\\">\\n            <span class=\\\"juicon juicon-twitter text-faded\\\"></span> \\n            <a href=\\\"https://www.twitter.com/salesforcejobs\\\">@Salesforcejobs</a>\\n        </h3>\\n\\n        <a class=\\\"twitter-timeline\\\"\\n\t\t   width=\\\"100%\\\"\\n\t\t   height=\\\"300\\\"\\n\t\t   href=\\\"https://twitter.com/salesforcejobs\\\"\\n\t\t   data-widget-id=\\\"565570508859916289\\\"\\n\t\t   data-chrome=\\\"noheader nofooter\\\"\\n\t\t   data-border-color=\\\"#dadee2\\\">\\n\t\t    Tweets by @salesforcejobs\\n\t\t</a>\\n    </div>\\n</div>\");\n  \n});\n\nEmber.TEMPLATES[\"jobSearch\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"scope-container\\\">\\n\t\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"searchBar\", options) : helperMissing.call(depth0, \"partial\", \"searchBar\", options))));\n  data.buffer.push(\"\\n\\n\t\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"searchResults\", options) : helperMissing.call(depth0, \"partial\", \"searchResults\", options))));\n  data.buffer.push(\"\\n\\n\t\");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"pleaseLoginModal\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\"\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"pleaseLoginModal\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1;\n\n\n  data.buffer.push(\"<div class=\\\"modal fade\\\" id=\\\"pleaseLoginModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal__shell\\\">\\n        <div class=\\\"modal__content\\\" data-qa=\\\"modal\\\">\\n            <div class=\\\"modal__top\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" data-qa-button=\\\"dismiss\\\">\\n                    <span class=\\\"close-modal-x\\\"></span><span class=\\\"sr-only\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</span>\\n                </button>\\n                <h2 class=\\\"modal__heading\\\" id=\\\"myModalLabel\\\" data-qa-label=\\\"head\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.loginToSaveJob\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</h2>\\n            </div>\\n\\n            <div class=\\\"modal__body\\\" data-qa-label=\\\"body\\\">\\n                \");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.youNeedToLogin\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            </div>\\n\\n            <div class=\\\"modal__footer\\\">\\n                <button type=\\\"button\\\" class=\\\"button button--secondary\\\" data-dismiss=\\\"modal\\\" data-qa-button=\\\"close\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</button>\\n                <button id=\\\"modalOk\\\" type=\\\"button\\\" class=\\\"button button--primary\\\" data-dismiss=\\\"modal\\\" data-qa-button=\\\"ok\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.ok\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"searchBar\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', helper, options;\n  data.buffer.push(\"\\n                                <div class=\\\"form__group mar--sm--tm mar--md--bn\\\">\\n                                    <div class=\\\"input__wrap has-icon--right\\\">\\n                                        <div class=\\\"input__icon juicon juicon-chch\\\"></div>\\n                                        \");\n  data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n    'type': (\"text\"),\n    'data-qa-input': (\"nearValue\"),\n    'placeholder': (\"labels.nearPlaceholder\"),\n    'class': (\"bg-1\"),\n    'value': (\"nearValue\")\n  },hashTypes:{'type': \"STRING\",'data-qa-input': \"STRING\",'placeholder': \"ID\",'class': \"STRING\",'value': \"ID\"},hashContexts:{'type': depth0,'data-qa-input': depth0,'placeholder': depth0,'class': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                                    </div>\\n                                </div>\\n                            \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '';\n  data.buffer.push(\"\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"column--sm--6\\\">\\n                                        <div class=\\\"form__group mar--md--tm mar--md--bn\\\">\\n                                            <div class=\\\"select__wrap\\\">\\n                                                <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                                \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'data-qa-select': (\"distance\"),\n    'content': (\"radiusOptions\"),\n    'value': (\"selectedRadius\")\n  },hashTypes:{'data-qa-select': \"STRING\",'content': \"ID\",'value': \"ID\"},hashContexts:{'data-qa-select': depth0,'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\"\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"column--sm--6\\\">\\n                                        <div class=\\\"form__group mar--md--tm mar--md--bn\\\">\\n                                            <div class=\\\"select__wrap\\\">\\n                                                <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                                \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'data-qa-select': (\"unit\"),\n    'content': (\"radiusUnits\"),\n    'value': (\"selectedUnit\")\n  },hashTypes:{'data-qa-select': \"STRING\",'content': \"ID\",'value': \"ID\"},hashContexts:{'data-qa-select': depth0,'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\"\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"scope-container\\\">\\n    <div class=\\\"community-hero mar--sm--bm\\\" style=\\\"background: #33536d;\\\">\\n        <div class=\\\"community-hero__bg\\\" style=\\\"background-image: url('https://www.salesforce.com/assets/images/careers/business-background.jpg')\\\"></div>\\n        <div class=\\\"content community-hero__content\\\" style=\\\"max-width: 700px; margin: 0 auto;\\\">\\n            <h1 data-qa-label=\\\"title\\\" class=\\\"text-center mar--md--bxl mar--md--txl\\\"><span class=\\\"text-white\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</span></h1>\\n            <div class=\\\"table-group mar--md--bxl\\\">\\n                <div class=\\\"table-group__object--large block-on-small pad--sm--only--rn\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--md--bn\\\">\\n                                <div class=\\\"input__wrap has-icon--right\\\">\\n                                    <div class=\\\"input__icon juicon juicon-search\\\"></div>\\n                                    \");\n  data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n    'type': (\"text\"),\n    'data-qa-input': (\"searchTerm\"),\n    'placeholder': (\"labels.searchPlaceholder\"),\n    'class': (\"bg-1\"),\n    'value': (\"searchTerm\")\n  },hashTypes:{'type': \"STRING\",'data-qa-input': \"STRING\",'placeholder': \"ID\",'class': \"STRING\",'value': \"ID\"},hashContexts:{'type': depth0,'data-qa-input': depth0,'placeholder': depth0,'class': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--md--bn\\\">\\n                                <div class=\\\"select__wrap\\\">\\n                                    <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                    \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'data-qa-select': (\"categories\"),\n    'content': (\"categories\"),\n    'value': (\"selectedJobFamily\")\n  },hashTypes:{'data-qa-select': \"STRING\",'content': \"ID\",'value': \"ID\"},hashContexts:{'data-qa-select': depth0,'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--sm--tm mar--md--bn\\\">\\n                                <div class=\\\"select__wrap\\\">\\n                                    <div class=\\\"input__icon juicon juicon-location\\\"></div>\\n                                    \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'data-qa-select': (\"location\"),\n    'content': (\"locations\"),\n    'value': (\"selectedLocation\")\n  },hashTypes:{'data-qa-select': \"STRING\",'content': \"ID\",'value': \"ID\"},hashContexts:{'data-qa-select': depth0,'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            \");\n  stack1 = helpers['if'].call(depth0, \"isNear\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  stack1 = helpers['if'].call(depth0, \"isNearMe\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"table-group__object--small pad--md--lm block-on-small width--full--sm--only mar--sm--only--bxl\\\">\\n                    <button id=\\\"search\\\" type=\\\"button\\\" data-qa-button=\\\"Search\\\" \");\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n    'disabled': (\"disableSearch\"),\n    'class': (\":button :button--primary :width--full--sm--only :theme-bg-color isSearching:load-this\")\n  },hashTypes:{'disabled': \"STRING\",'class': \"STRING\"},hashContexts:{'disabled': depth0,'class': depth0},contexts:[],types:[],data:data})));\n  data.buffer.push(\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickSearch\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.search\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"searchResults\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                    <div>\\n                        <div class=\\\"panel\\\">\\n                            <p data-qa-label=\\\"emptyState\\\" class=\\\"text-faded text-center pad--sm--xl\\\">\\n                                \");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.emptyState\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            </p>\\n                        </div>\\n                    </div>\\n                \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                    <div class=\\\"alert alert--warning mar--md--bm\\\">\\n                        <button data-qa-label=\\\"warning\\\" type=\\\"button\\\" class=\\\"close show-brkpoint--sm--only\\\" data-dismiss=\\\"alert\\\"><span class=\\\"alert-close-x\\\"></span><span class=\\\"sr-only\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</span></button>\\n                        <strong>\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.warning\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</strong>\\n                    </div>\\n                \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card__body\\\">\\n                            \");\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobAppliedCompleted\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"column--md--8\\\">\\n                                    <h1 data-qa-link=\\\"jobTitle\\\" class=\\\"page__heading has-subheading\\\"><a href=\\\"#\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"jobPostingDrillIn\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"searchResult.Job_Title__c\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a></h1>\\n                                    <h2 data-qa-label=\\\"primaryLocation\\\" class=\\\"page__subheading\\\">\\n                                        \");\n  stack1 = helpers._triageMustache.call(depth0, \"searchResult.firstLocationString\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\" \\n                                        \");\n  stack1 = helpers['if'].call(depth0, \"searchResult.otherLocationsString\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                        \");\n  stack1 = helpers['if'].call(depth0, \"searchResult.allowRemote\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                    </h2>\\n                                </div>\\n                            </div>\\n                            <div data-qa-label=\\\"fieldSetLabels\\\" class=\\\"card__text\\\">\\n                                \");\n  stack1 = helpers.each.call(depth0, \"field\", \"in\", \"searchResult.fieldsToDisplay\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            </div>\\n                        </div>\\n                    </div>\\n                \");\n  return buffer;\n  }\nfunction program6(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                <button class=\\\"float--right button button--secondary mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\" disabled=\\\"disabled\\\" data-qa-button=\\\"applied\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.applied\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</button>\\n                            \");\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                \");\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobAppliedInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                    <a class=\\\"float--right button button--success mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"finishApplication\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\" data-qa-link=\\\"finish\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.finish\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a>\\n                                \");\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                    \");\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobSaved\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                \");\n  return buffer;\n  }\nfunction program12(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                        <a class=\\\"float--right button button--success mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\" data-qa-link=\\\"saved\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.saved\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a>\\n                                    \");\n  return buffer;\n  }\n\nfunction program14(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                        <button \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveJob\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\" \");\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n    'disabled': (\"searchResult.disableSaveButton\"),\n    'class': (\":float--right :button :button--primary :theme-bg-color :mar--sm--only--rs :mar--md--lxs :show-brkpoint--md :theme-bg-color\")\n  },hashTypes:{'disabled': \"ID\",'class': \"STRING\"},hashContexts:{'disabled': depth0,'class': depth0},contexts:[],types:[],data:data})));\n  data.buffer.push(\"  data-qa-button=\\\"save\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</button>\\n                                    \");\n  return buffer;\n  }\n\nfunction program16(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\" &amp; \\n                                            <a data-qa-link=\\\"otherLocations\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"pointer text-primary text-underline\\\" data-original-title=\\\"\");\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"searchResult.otherLocationsString\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\\">\\n                                                \");\n  stack1 = helpers._triageMustache.call(depth0, \"searchResult.otherLocationsCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\" \");\n  stack1 = helpers._triageMustache.call(depth0, \"searchResult.othersText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a>\\n                                        \");\n  return buffer;\n  }\n\nfunction program18(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                            &nbsp;<small data-qa-label=\\\"remoteAvailable\\\">(\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.remoteAvailable\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\")</small>\\n                                        \");\n  return buffer;\n  }\n\nfunction program20(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                    \");\n  stack1 = helpers['if'].call(depth0, \"field.value\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                \");\n  return buffer;\n  }\nfunction program21(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                        <div class=\\\"job-field\\\">\\n                                            <h4 \");\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n    'data-qa-label': (\"field.label\")\n  },hashTypes:{'data-qa-label': \"ID\"},hashContexts:{'data-qa-label': depth0},contexts:[],types:[],data:data})));\n  data.buffer.push(\" class=\\\"job-field-label\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"field.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</h4>\\n                                            \");\n  stack1 = helpers._triageMustache.call(depth0, \"field.value\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                        </div>\\n                                    \");\n  return buffer;\n  }\n\nfunction program23(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                    <button \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"loadMore\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\" data-qa-button=\\\"loadMore\\\" type=\\\"button\\\" class=\\\"width--full button button--secondary\\\">\\n                        \");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.loadMore\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                    </button>\\n                \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"scope-container\\\">\\n    <div class=\\\"content pad--md--txl pad--md--bl\\\">\\n        <div class=\\\"row\\\">            \\n            <div class=\\\"column--md--8\\\">\\n                \");\n  stack1 = helpers['if'].call(depth0, \"showEmptyState\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                \");\n  stack1 = helpers['if'].call(depth0, \"showWarning\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n                \");\n  stack1 = helpers.each.call(depth0, \"searchResult\", \"in\", \"searchResults\", {hash:{\n    'itemController': (\"jobPosting\")\n  },hashTypes:{'itemController': \"STRING\"},hashContexts:{'itemController': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                \");\n  stack1 = helpers['if'].call(depth0, \"showLoadMore\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            </div>\\n\\n            \");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sideBar\", options) : helperMissing.call(depth0, \"partial\", \"sideBar\", options))));\n  data.buffer.push(\"\\n\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"sideBar\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n        <div class=\\\"content__section mar--md--bxl\\\">\\n            <h3 class=\\\"mar--sm--tn mar--sm--bn\\\" data-qa-label=\\\"myJobs\\\"><span class=\\\"juicon juicon-bookmark text-faded\\\" data-qa=\\\"icon\\\"></span> \");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.myJobs\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</h3>\\n            <ul class=\\\"list-style-type-none mar--sm--n\\\">\\n                \");\n  stack1 = helpers.each.call(depth0, \"job\", \"in\", \"allMyJobs\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            </ul>\\n        </div>\\n        \\n    \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\" \\n                    <li class=\\\"mar--sm--bm mar--sm--tm\\\">\\n                        <h4 class=\\\"mar--sm--n\\\"><a href=\\\"\");\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"job.jobPostingUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\\" target=\\\"_top\\\" data-qa=\\\"link\\\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"job.jobTitle\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</a></h4>\\n                        <h5 class=\\\"mar--sm--n text-faded\\\" data-qa-label=\\\"location\\\">\\n                            \");\n  stack1 = helpers._triageMustache.call(depth0, \"job.firstLocationString\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\" \\n                            \");\n  stack1 = helpers['if'].call(depth0, \"job.otherLocationsString\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  stack1 = helpers['if'].call(depth0, \"job.isRemoteAvailable\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        </h5>\\n                        \");\n  stack1 = helpers['if'].call(depth0, \"job.isApplication\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                    </li>\\n                \");\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1, helper, options;\n  data.buffer.push(\" &amp;\\n                                <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"pointer text-primary text-underline\\\" data-original-title=\\\"\");\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"job.otherLocationsString\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\\" data-qa=\\\"tooltip\\\">\\n                                    \");\n  stack1 = helpers._triageMustache.call(depth0, \"job.otherLocationsCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                    \");\n  data.buffer.push(escapeExpression((helper = helpers.locationsCount || (depth0 && depth0.locationsCount),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"job.otherLocationsCount\", options) : helperMissing.call(depth0, \"locationsCount\", \"job.otherLocationsCount\", options))));\n  data.buffer.push(\"\\n                                </a>\\n                            \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                <small data-qa-label=\\\"remoteAvailable\\\">(\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.remoteAvailable\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\")</small>\\n                            \");\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                            \");\n  stack1 = helpers['if'].call(depth0, \"job.hasJobOffer\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        \");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                <small \");\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n    'class': (\":label job.jobLabelClass\")\n  },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n  data.buffer.push(\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"labels.offer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\" \");\n  stack1 = helpers._triageMustache.call(depth0, \"job.jobOfferStatus\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</small>\\n                            \");\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', stack1;\n  data.buffer.push(\"\\n                                <small \");\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n    'class': (\":label job.jobLabelClass\")\n  },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n  data.buffer.push(\">\");\n  stack1 = helpers._triageMustache.call(depth0, \"job.statusText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</small>\\n                            \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"column--md--4\\\" data-qa-container=\\\"myJobs\\\">\\n\\n    \");\n  stack1 = helpers['if'].call(depth0, \"allMyJobs\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n</div>\\n\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=../app/tore_jobSearch/templates.js")

eval("(function() {\n\n// Kick off Ember\nApp = Ember.Application.create({\n    rootElement: '#application'\n});\n\nfunction processJobPostings(jobPostings, jobPostingFieldsToDisplay){\n    jobPostings.forEach(function(jp, index) {\n        // Build location string\n        if (!Ember.isEmpty(jp.locations)) {\n            jp = $.extend(jp, createLocationStrings(jp.locations));\n        }\n\n        jp.allowRemote = jp.Requisition__r.Allow_Remote_Employees__c;\n        \n        // Build display\n        jp.fieldsToDisplay = [];\n        if (jobPostingFieldsToDisplay) {\n            jobPostingFieldsToDisplay.forEach(function(field) {\n                jp.fieldsToDisplay.addObject({\n                    label: field.label,\n                    value: field.type === 'DATE' || field.type === 'DATETIME' ? moment(jp[field.name]).format('MMM D, YYYY') : jp[field.name]\n                });\n            });\n        };\n    });\n\n    return jobPostings;\n}\n\nfunction createLocationStrings(locations){\n\n    var firstLocationString = '';\n    var otherLocationsString;\n    var otherLocationsCount = 0;\n\n    locations.forEach(function(location, i) {\n        location = location.Location__r;\n\n        var locationString = '';\n\n        locationString = location.City__c + ', ' + location.Standardized_State_Province__c;\n\n        if (!Ember.isEmpty(location.Standardized_Country_Region__c) && location.Standardized_Country_Region__c !== 'US') {\n            locationString += ', ' + location.Standardized_Country_Region__c;\n        }\n\n        if (i === 0) {\n            firstLocationString = locationString;\n        } else if (i === 1) {\n            otherLocationsCount++;\n            otherLocationsString = locationString;\n        } else {\n            otherLocationsCount++;\n            otherLocationsString += ' | ' + locationString;\n        }\n    });\n \n    var obj = {\n        firstLocationString: firstLocationString,\n        otherLocationsString: otherLocationsString,\n        otherLocationsCount: otherLocationsCount\n    };\n\n    return obj;\n};\n\n\n// Flatten linkedIn Data\nvar degreePicklistValues = [];\n\nif (!Ember.isEmpty(parsedJobSearchMap.degreeFields)) {\n    degreePicklistValues = parsedJobSearchMap.degreeFields.getEach('value');\n}\n\nvar numberToMonthMap = {\n    '1' : 'January',\n    '2' : 'February',\n    '3' : 'March',\n    '4' : 'April',\n    '5' : 'May',\n    '6' : 'June',\n    '7' : 'July',\n    '8' : 'August',\n    '9' : 'September',\n    '10' : 'October',\n    '11' : 'November',\n    '12' : 'December'\n};\n\nfunction convertLinkedInToEducationHistoryObj(educations) {\n    return educations.map(function(e) {\n        // Educations from linkedIn only have year in the startDate/endDate\n\n        return {\n            Education_Level__c: degreePicklistValues.indexOf(e.degree) !== -1 ? e.degree : 'Other',\n            Start_Date__c: !Ember.isNone(e.startDate) ? moment.utc(e.startDate.year, 'YYYY').format('YYYY-MM-DD') : null,\n            Start_Month__c: !Ember.isNone(e.startDate) ? e.startDate.month : null,\n            Start_Year__c: !Ember.isNone(e.startDate) ? e.startDate.year : null,\n            End_Month__c: !Ember.isNone(e.endDate) ? e.endDate.month : null,\n            End_Year__c: !Ember.isNone(e.endDate) ? e.endDate.year : null,\n            Name: e.schoolName,\n            Name__c: e.schoolName,\n            Status__c: null,\n            End_Date__c: !Ember.isNone(e.endDate) ? moment.utc(e.endDate.year, 'YYYY').format('YYYY-MM-DD') : null\n        };\n    });\n}\n\nfunction convertLinkedInToEmploymentHistoryObj(positions) {\n    return positions.map(function(p) {\n        // Positions from LinkedIn only have year and month in startDate/endDate\n        var startDate;\n        var endDate;\n\n        if (!Ember.isNone(p.startDate)) {\n            if (!Ember.isNone(p.startDate.month)) {\n                startDate = moment.utc(p.startDate.month + '/' + p.startDate.year, 'M/YYYY').format('YYYY-MM-DD');\n            } else {\n                startDate = moment.utc(p.startDate.year, 'YYYY').format('YYYY-MM-DD');\n            }\n        }\n\n        if (!Ember.isNone(p.endDate)) {\n            if (!Ember.isNone(p.endDate.month)) {\n                endDate = moment.utc(p.endDate.month + '/' + p.endDate.year, 'M/YYYY').format('YYYY-MM-DD');\n            } else {\n                endDate = moment.utc(p.endDate.year, 'YYYY').format('YYYY-MM-DD');\n            }\n        }\n\n        return {\n            Name: !Ember.isNone(p.company) ? p.company.name : null,\n            Job_Title__c: p.title,\n            Start_Month__c: !Ember.isNone(p.startDate) ? p.startDate.month : null,\n            Start_Year__c: !Ember.isNone(p.startDate) ? p.startDate.year : null,\n            End_Month__c: !Ember.isNone(p.endDate) ? p.endDate.month : null,\n            End_Year__c: !Ember.isNone(p.endDate) ? p.endDate.year : null,\n            Start_Date__c: startDate,\n            Is_Current__c: p.isCurrent,\n            End_Date__c: endDate\n        };\n    });\n}\n\nvar updateHeight = function() {\n    Ember.run.scheduleOnce('afterRender', this, function() {\n        if(parent.resizeIframe){\n            parent.resizeIframe();\n        }\n    });\n};\n\nvar globalThis = this;\n\nEmber.View.reopen({\n    willInsertElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    },\n    willDestroyElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    }\n});\n\n\n// Helper to show otheR when there is one location or otherS when there are multiple locations\nEmber.Handlebars.helper('locationsCount', function(counter) {\n    if (parseInt(counter) == 1) {\n        return 'other';\n    } else {\n        return 'others';\n    }\n});\n\n\nApp.PleaseLoginModalView = Ember.View.extend({\n    templateName: 'pleaseLoginModal',\n    didInsertElement: function() {    \n    }\n});\n\n\nApp.JobSearchView = Ember.View.extend({\n    didInsertElement: function() {\n        $('body').tooltip({\n            selector: '[data-toggle=tooltip]'\n        });\n\n        if (parent && parent.toggleFooter) {\n            parent.toggleFooter();\n        }\n    },\n    keyPress: function(e) {\n        if (e.keyCode === 13 && $('#search').attr('disabled') != 'disabled') {\n            this.get('controller').send('clickSearch');\n        }\n    }\n});\n\n\nApp.SalesforceTwitterComponent = Ember.Component.extend({\n    layoutName: 'components/twitter',\n    didInsertElement: function() {\n        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\"://platform.twitter.com/widgets.js\";fjs.parentNode.insertBefore(js,fjs);}}(document,\"script\",\"twitter-wjs\");\n        Ember.run.later(this, updateHeight, 1000);\n    }\n});\n\n\nApp.JobSearchController = Ember.ObjectController.extend({\n    theLinkedInMap: function(){\n        return this.get('linkedInMap');\n    }.property(),\n    init: function() {\n        this._super();\n\n        if (!Ember.isEmpty(searchTerm) || !Ember.isEmpty(nearValue)) {\n            Ember.run.later(this, function() {\n                if (!this.get('isDestroyed') && !this.get('isDestroying')) { //For unit test\n\n                    this.setProperties({\n                        currentSearchTerm : this.get('searchTerm'),\n                        currentLocation : this.get('selectedLocation'),\n                        currentCategory : this.get('selectedJobFamily'),\n                        currentNearValue : this.get('nearValue'),\n                        currentRadius : this.get('selectedRadius'),\n                        currentUnit : this.get('selectedUnit'),\n                        currentOffSet : 0\n                    });\n\n                    this.search(false);\n                }\n            }, 1000);\n        }\n    },\n    currentOffSet : 0,\n    offsetStep : 10,\n    selectedJobFamily: null,\n    selectedRadius: null,\n    selectedUnit: null,\n    searchDisabled : false,\n    showWarning: false,\n    jobsText : function(){\n        return this.get('searchResults').length == 1 ? 'job' : 'jobs'\n    }.property(''),\n    changedLocation : function(){\n        this.set('searchDisabled', false);\n    }.observes('selectedLocation'),\n    disableSearch : function(){\n        return this.get('searchDisabled') ? 'disabled' : false;\n    }.property('searchDisabled'),\n    disableSearchOnNear : function(){\n        Ember.run.debounce(this, this.disableSearchOnNearCallback, 100);\n    }.observes('selectedLocation', 'nearValue'),\n    disableSearchOnNearCallback : function(){\n        if(this.get('selectedLocation') == labels.near && Ember.isEmpty(this.get('nearValue'))){\n            this.set('searchDisabled', true);\n        } else {\n            this.set('searchDisabled', false);\n        }\n    },\n    showEmptyState : function(){\n        return Ember.isEmpty(this.get('searchResults')) && !this.get('isSearching') && !this.get('showWarning')\n    }.property('isSearching', 'searchResults'),\n    showLoadMore : function(){\n        if(Ember.isEmpty(this.get('queryJobPostings'))){\n            return false;\n        }\n\n        return (!this.get('showEmptyState') && this.get('queryJobPostings') > this.get('offsetStep'))\n    }.property('queryJobPostings', 'showEmptyState'),\n    numberOfJobs: function() {\n        var searchResults = this.get('searchResults');\n\n        return !Ember.isEmpty(searchResults) ? searchResults.length : 0;\n    }.property('searchResults'),\n    isAllLocations: Ember.computed.equal('selectedLocation', 'All locations'),\n    isNear: Ember.computed.equal('selectedLocation', labels.near),\n    isNearMe: Ember.computed.equal('selectedLocation', labels.nearMe),\n    isRemote: Ember.computed.equal('selectedLocation', labels.remote),\n    actions: {\n        loadMore : function(){\n            this.set('currentOffSet', this.get('currentOffSet') + this.get('offsetStep'));\n            this.search(true);\n        },\n        clickSearch: function() {\n            this.setProperties({\n                searchResults : [],\n                currentSearchTerm : this.get('searchTerm'),\n                currentLocation : this.get('selectedLocation'),\n                currentCategory : this.get('selectedJobFamily'),\n                currentNearValue : this.get('nearValue'),\n                currentRadius : this.get('selectedRadius'),\n                currentUnit : this.get('selectedUnit'),\n                currentOffSet : 0\n            });\n            this.search(true);\n        }\n    },\n    findLocation: function(callback, searchTerm){\n        var self = this;\n        $.ajax({\n            url: 'https://maps.googleapis.com/maps/api/geocode/json?address=' + searchTerm +'&key=' + self.get('apiKey').Field1__c\n        }).done(callback)\n    },\n    search: function(showResultsCount) {\n        var self = this;\n        self.set('isSearching', true);\n        self.set('queryJobPostings', 0);\n        self.set('showWarning', false);\n\n        var searchObj = self.getProperties('currentSearchTerm', 'currentLocation', 'currentCategory', \n                                            'currentNearValue', 'currentRadius', 'currentUnit', 'currentOffSet');\n\n        var callback = function(res, evt) {\n            self.set('isSearching', false);\n            if (res) {\n                var parsedResult = parseResult(res);\n                var jobPostings = parsedResult.data.jobPostings;\n                var searchResults = self.get('searchResults');\n\n                processJobPostings(jobPostings, self.get('jobPostingFieldsToDisplay'));\n                //we will return up to 11 job postings to determine if we need to load more or not. So we only want the first 10.\n                self.set('searchResults', searchResults.concat(jobPostings.slice(0,10)));\n                self.set('queryJobPostings', jobPostings.length);  //used to determine if we need to display loadmore\n            }\n        };\n\n        if (searchObj.currentLocation === labels.nearMe) {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    searchObj.latitude = position.coords.latitude;\n                    searchObj.longitude = position.coords.longitude;\n\n                    cont.searchJobs(JSON.stringify(searchObj), callback);\n                }, function(err){\n                    self.set('isSearching', false);\n                    self.set('selectedLocation', labels.near);\n                    self.set('showWarning', true);\n                    self.get('locations').removeObject(labels.nearMe);\n                });\n            } else {\n                x.innerHTML = \"Geolocation is not supported by this browser.\";\n            }\n        } else if (searchObj.currentLocation === labels.near) {\n            var googleCallback = function(results) {\n                if(results.status == 'ZERO_RESULTS'){\n                    self.set('isSearching', false);\n                    self.set('searchResults', []);\n                    self.set('queryJobPostings', 0);\n                    return;\n                }\n\n                var location = results.results[0];\n\n                searchObj.latitude = location.geometry.location.lat\n                searchObj.longitude = location.geometry.location.lng;\n\n                cont.searchJobs(JSON.stringify(searchObj), callback);\n            };\n\n            this.findLocation(googleCallback, this.get('nearValue'));\n        } else {\n            cont.searchJobs(JSON.stringify(searchObj), callback);\n        }\n    }\n});\n\n\n\nApp.JobPostingController = Ember.ObjectController.extend({\n    needs: ['jobSearch'],\n    loggedInUserBinding: 'controllers.jobSearch.loggedInUser',\n    applicationsBinding: 'controllers.jobSearch.applications',\n    savedJobsBinding: 'controllers.jobSearch.savedJobs',\n    allMyJobsBinding: 'controllers.jobSearch.allMyJobs',\n    theLinkedInMapBinding: 'controllers.jobSearch.theLinkedInMap',\n    othersText : function(){\n        return this.get('locations').length == 2 ? 'other' : 'others'\n    }.property(''),\n    isJobSaved: function(){\n        var jobPostingId = this.get('Id');\n        var savedJobs = this.get('savedJobs');\n\n        var savedJobsIds = [];\n        if (savedJobs) {\n            savedJobsIds = savedJobs.getEach('jobPostingId');\n        };\n\n        return savedJobsIds.indexOf(jobPostingId) != -1 ? true : false;\n    }.property('Id', 'savedJobs'),\n\n    isJobAppliedCompleted: function(){\n        //var jobPostingId = this.get('Id');\n        var applications = this.get('applications');\n\n        return applications.filterBy('jobPostingId', this.get('Id')).isAny('statusText', 'Applied');\n    }.property('Id', 'applications'),\n\n    isJobAppliedInProgress: function(){\n        var applications = this.get('applications');\n\n        return applications.filterBy('jobPostingId', this.get('Id')).isAny('statusText', 'In Progress');\n    }.property('Id', 'applications'),\n\n    jobPostingUrl: function() {\n        return parent.urlPrefix + '/JobListing?id=' + this.get('Id');\n    }.property('Id'),\n\n    disableSaveButton: function(){\n        return this.get('disableSave') ? true : false\n    }.property('disableSave'),\n\n    actions: {\n        jobPostingDrillIn: function() {\n            window.parent.location.href = this.get('jobPostingUrl');\n            \n            // reload the page on jobTitle click and then drill in to that job posting\n            // location.reload(); \n        },\n\n        finishApplication: function(){\n            var applicationId = this.get('applications').filterBy('jobPostingId', this.get('Id'))[0].id;\n            var url = parent.urlPrefix + '/Apply?id=' + applicationId;\n            window.parent.location.href = url;\n        },\n\n        saveJob: function(){\n            var self = this;\n            self.set('disableSave', true);\n\n            if (this.get('loggedInUser').UserType !== 'Guest') {\n                if(!self.get('isJobSaved')){\n\n                    var jobPosting = this.get('content');\n                    var linkedInMap = this.get('theLinkedInMap');\n\n                    var jsonString = {\n                        Application__c: '',\n                        Job_Posting__c: jobPosting.Id,\n                        Name: jobPosting.Job_Title__c,\n                        Candidate_User__c: self.get('loggedInUser').Id,\n                        Expressed_By__c: 'Candidate', // Picklist\n                        Source_Requisition__c: jobPosting.Requisition__c,\n                        Position__c: jobPosting.Requisition__r.Position__c,\n                        Education_History__c: '',\n                        Employment_History__c: '',\n                        Skills__c: '',\n                        locations: jobPosting.locations,\n                    };\n\n                    if (!Ember.isNone(linkedInMap)) {\n                        if (!Ember.isNone(linkedInMap.educations && !Ember.isEmpty(linkedInMap.educations.values))) {\n                            var educationHistories = convertLinkedInToEducationHistoryObj(linkedInMap.educations.values);\n                            var flattenedEducationHistory = '';\n\n                            educationHistories.forEach(function(eh) {\n                                // add education history to flattened string\n                                flattenedEducationHistory += eh.Name__c + '\\n'\n                                            + eh.Education_Level__c;\n\n                                if (!Ember.isNone(eh.Status__c)) {\n                                    flattenedEducationHistory += ' (' + eh.Status__c + ')';\n                                } \n                                \n                                flattenedEducationHistory += '\\n' \n                                                          + eh.Start_Year__c\n                                                          + ' - ' + eh.End_Year__c\n                                                          + '\\n\\n';\n                            });\n\n                            jsonString.Education_History__c = flattenedEducationHistory;\n                        }\n\n                        if (!Ember.isNone(linkedInMap.positions && !Ember.isEmpty(linkedInMap.positions.values))) {\n                            var employmentHistories = convertLinkedInToEmploymentHistoryObj(linkedInMap.positions.values);\n                            var flattenedEmploymentHistory = '';\n\n                            employmentHistories.forEach(function(eh) {\n                                // add employment history to flattened string\n                                flattenedEmploymentHistory += eh.Name + '\\n'\n                                            + eh.Job_Title__c + '\\n';\n\n                                if (!Ember.isNone(eh.Start_Month__c)){\n                                    flattenedEmploymentHistory += numberToMonthMap[eh.Start_Month__c] + ' ';\n                                }\n\n                                flattenedEmploymentHistory += eh.Start_Year__c + ' - ';\n\n                                if (eh.Is_Current__c == true) {\n                                    flattenedEmploymentHistory += 'present';\n                                } else if (!Ember.isNone(eh.End_Month__c)) {\n                                    flattenedEmploymentHistory += numberToMonthMap[eh.End_Month__c] + ' ';\n                                }\n\n                                if (!Ember.isNone(eh.End_Year__c)) {\n                                    flattenedEmploymentHistory += eh.End_Year__c;\n                                }\n\n                                flattenedEmploymentHistory += '\\n\\n';\n                            });\n                            jsonString.Employment_History__c = flattenedEmploymentHistory;\n                        }\n\n                        if (!Ember.isNone(linkedInMap.skills && !Ember.isEmpty(linkedInMap.skills.values))) {\n                            var skillsArray = [];\n                            linkedInMap.skills.values.forEach(function(skill) {\n                                skillsArray.addObject(skill.skill.name);\n                            });\n                            jsonString.Skills__c = skillsArray.join(', ');\n                        }\n                    }\n\n                    cont.saveJob(JSON.stringify(jsonString), function(results, responseObj){\n                        if (results) {\n                            var parsedResult = parseResult(results);\n\n                            //if(parsedResult.isSuccess){\n                            if (parsedResult.data.newJobId) {\n                                self.set('isJobSaved', true);\n\n                                var obj = createLocationStrings(jsonString.locations);\n                                var newJob = {\n                                    jobTitle: jsonString.Name,\n                                    firstLocationString: obj.firstLocationString,\n                                    otherLocationsString: obj.otherLocationsString,\n                                    otherLocationsCount: obj.otherLocationsCount,\n                                    jobPostingUrl: parent.urlPrefix + '/JobListing?id=' + jsonString.Job_Posting__c,\n                                    isRemoteAvailable: jobPosting.Requisition__r.Allow_Remote_Employees__c,\n                                    jobPostingId: jsonString.Job_Posting__c\n                                };\n\n                                var savedJobs = self.get('savedJobs');\n                                savedJobs.addObject(newJob);\n\n                                var allMyJobs = self.get('allMyJobs');\n                                allMyJobs.insertAt(0, newJob);\n                            };\n\n                        } else {\n                            self.set('errorMsg', parsedResults.errorMessages);\n                            self.set('disableSave', false);\n                        }\n                    });\n                }\n            } else {\n                var self = this;\n                self.set('disableSave', false);\n\n                $('#pleaseLoginModal').modal({\n                    show: true,\n                });\n\n                $('#modalOk').click(function() {\n                    var url = parent.urlPrefix + '/Login/';\n                    window.parent.location.href = url;\n                    $('#modalOk').unbind('click');\n                });\n            };\n        },\n    }\n});\n\n// Routes\nApp.JobSearchRoute = Ember.Route.extend( {\n    model: function(params) {\n        var categories = Ember.A();\n\n        if (!Ember.isEmpty(parsedJobSearchMap.categories)) {\n            categories.addObjects(parsedJobSearchMap.categories.getEach('value'));\n        }\n        categories = categories.sort();\n        categories.unshift('All Categories');\n        var applications = [];\n\n        if (!Ember.isEmpty(parsedJobSearchMap.applications)) {\n            parsedJobSearchMap.applications.forEach(function(app) {\n                var obj = createLocationStrings(app.locations);\n\n                var applicationObj = { \n                    id: app.Id,\n                    jobPostingId: app.Job_Posting__c,\n                    jobTitle: !Ember.isNone(app.Job_Posting__r) ? app.Job_Posting__r.Job_Title__c : null,\n                    firstLocationString: obj.firstLocationString,\n                    otherLocationsString: obj.otherLocationsString,\n                    otherLocationsCount: obj.otherLocationsCount,\n                    jobPostingUrl: parent.urlPrefix + '/JobListing?id=' + app.Job_Posting__c,\n                    isApplication: true,\n                    hasJobOffer: !Ember.isEmpty(app.Job_Offers__r),\n                    jobOfferStatus: !Ember.isEmpty(app.Job_Offers__r) ? app.Job_Offers__r.records[0].Status__c : null,\n                    statusText: app.Status__c === 'Completed' ? 'Applied' : 'In Progress',\n                    isRemoteAvailable: app.Requisition__r.Allow_Remote_Employees__c,\n                    createdDate: app.CreatedDate\n                };\n\n                if (!Ember.isEmpty(app.Job_Offers__r)) {\n                    if (['Accepted', 'Extended'].indexOf(app.Job_Offers__r.records[0].Status__c) !== -1) {\n                        applicationObj.jobLabelClass = 'label--success';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    }\n                } else {\n                    if (app.Status__c === 'In Progress') {\n                        applicationObj.jobLabelClass = 'label--warning';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    }\n                }\n\n                applications.addObject(applicationObj);\n            });\n        }\n\n        // saved jobs\n        var savedJobs = [];\n        if (!Ember.isEmpty(parsedJobSearchMap.savedJobs)) {              \n            parsedJobSearchMap.savedJobs.forEach(function(savedJob) {\n                var obj = createLocationStrings(savedJob.locations);\n\n                var jobObj = {\n                    jobPostingId: savedJob.Job_Posting__c,\n                    jobTitle: savedJob.Name,\n                    firstLocationString: obj.firstLocationString,\n                    otherLocationsString: obj.otherLocationsString,\n                    otherLocationsCount: obj.otherLocationsCount,\n                    jobPostingUrl: parent.urlPrefix + '/JobListing?id=' + savedJob.Job_Posting__c,\n                    isRemoteAvailable: savedJob.Source_Requisition__r.Allow_Remote_Employees__c,\n                    createdDate: savedJob.CreatedDate\n                };\n\n                savedJobs.addObject(jobObj); \n            });\n        }\n\n        var allMyJobsArray = applications.concat(savedJobs).sortBy('createdDate').reverse();\n\n\n        var locations = [labels.allLocations, labels.near, labels.nearMe];\n        if (parsedJobSearchMap.hasRemote) {\n            locations.push(labels.remote);\n        }\n        var searchResults = [];\n\n        if(Ember.isEmpty(searchTerm) && Ember.isEmpty(nearValue)){\n            searchResults = processJobPostings(parsedJobSearchMap.recentPosts, parsedJobSearchMap.jobPostingFieldsToDisplay)\n        }\n\n        return {\n            searchResults : searchResults,\n            radiusOptions: ['5', '10', '25', '50'],\n            radiusUnits: ['mi', 'km'],\n            locations: locations,\n            categories: categories,\n            jobPostingFieldsToDisplay: parsedJobSearchMap.jobPostingFieldsToDisplay,\n            applications: applications,\n            apiKey: parsedJobSearchMap.apiKey,\n            loggedInUser: parsedJobSearchMap.loggedInUser,\n            jobPostings: parsedJobSearchMap.jobPostings,\n            savedJobs: savedJobs,\n            searchTerm : Ember.isEmpty(searchTerm) ? null : searchTerm,\n            selectedLocation : Ember.isEmpty(nearValue) ? null : labels.near,\n            nearValue : Ember.isEmpty(nearValue) ? null : nearValue,\n            isSearching : !Ember.isEmpty(searchTerm) || !Ember.isEmpty(nearValue),\n            linkedInMap: parsedJobSearchMap.linkedInMap,\n            linkedInSsoUrl: parsedJobSearchMap.linkedInSsoUrl,\n            allMyJobs: allMyJobsArray\n        };\n    }\n});\n\n// Router\nApp.Router.map(function() {\n    this.resource('jobSearch', { path: '/' });\n});\n\n\n// This setting disables the detail routing from showing up in the navbar.\nApp.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=../app/tore_jobSearch/tore_jobSearch.js")