eval("(function() {\n\n// Add a labels property to every controller so that we don't have to access the global scope (which was deprecated).\nEmber.ControllerMixin.reopen({\n    labels: labels\n});\n\n// Attribute bindings for QA locators so we can easily add them to ember markup.\nEmber.View.reopen({\n    attributeBindings: ['data-dev', 'data-qa', 'data-qa-label', 'data-qa-button', 'data-qa-input', \n                        'data-qa-link', 'data-qa-pane', 'data-qa-select', 'da-qa-modal', 'data-qa-alert',\n                        'data-qa-container'],\n    didInsertElement : function(){\n        this._super();\n\n        Ember.run.scheduleOnce('afterRender', this, this.initJUI);   \n    },\n    initJUI: function() {\n        // Initialize tooltips if they exist. This might actually be expensive since it's run every time a new view is added. Will refactor.\n        /*if ($('[data-toggle=\"tooltip\"]').length > 0) {\n            $('body').tooltip({\n                selector: '[data-toggle=tooltip]'\n            });\n        }*/\n        this.afterRenderEvent();\n    },\n    afterRenderEvent : function() {\n        // implement this hook in your own subclasses and run your jQuery logic there\n    }\n});\n\n})();//@ sourceURL=../../js/emberBase.js")

eval("(function() {\n\nEmber.TEMPLATES[\"components/twitter\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<a class=\\\"twitter-timeline\\\"\\n   width=\\\"100%\\\"\\n   height=\\\"300\\\"\\n   href=\\\"https://twitter.com/salesforcejobs\\\"\\n   data-widget-id=\\\"565570508859916289\\\"\\n   data-chrome=\\\"noheader nofooter\\\"\\n   data-border-color=\\\"#dadee2\\\">\\n    Tweets by @salesforcejobs\\n</a>\");\n  \n});\n\nEmber.TEMPLATES[\"jobPosting\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"recentSave\", {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                        <div class=\\\"alert alert--success mar--sm--bm saveAlert\\\">\\n                            <strong data-qa-label=\\\"savedJobPreviously\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.yourJobHasBeenSaved\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</strong>\\n                        </div>\\n                    \");\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n                        <div class=\\\"alert alert--info mar--sm--bm saveAlert\\\">\\n                            <strong data-qa-label=\\\"savedJobToday\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.youSavedThisJobOn\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.formatDate || (depth0 && depth0.formatDate)),stack1 ? stack1.call(depth0, \"savedJob.CreatedDate\", options) : helperMissing.call(depth0, \"formatDate\", \"savedJob.CreatedDate\", options))));\n  data.buffer.push(\".</strong>\\n                        </div>\\n                    \");\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                    <div \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":alert appliedAlertClass :mar--sm--bm\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\\n                        <strong data-qa-label=\\\"applied\\\">\");\n  hashContexts = {'unescaped': depth0};\n  hashTypes = {'unescaped': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"appliedMessage\", {hash:{\n    'unescaped': (\"true\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</strong>\\n                    </div>\\n                \");\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\" | <small>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.remoteAvailable\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\");\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <h4 data-qa-label=\\\"fieldSetLabel\\\" class=\\\"job-field-label\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"field.label\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h4>\\n                    <p data-qa-label=\\\"fieldSetValue\\\">\");\n  hashContexts = {'unescaped': depth0};\n  hashTypes = {'unescaped': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"field.value\", {hash:{\n    'unescaped': (\"true\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</p>\\n                \");\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                    <div class=\\\"button-group inline-block vam width--full--sm--only\\\">\\n                        <a data-qa-button=\\\"bottomActionButton\\\" \");\n  hashContexts = {'href': depth0,'class': depth0,'disabled': depth0,'data-toggle': depth0};\n  hashTypes = {'href': \"ID\",'class': \"STRING\",'disabled': \"STRING\",'data-toggle': \"ID\"};\n  options = {hash:{\n    'href': (\"redirectUrl\"),\n    'class': (\":button actionButtonColor :theme-bg-color :width--full--sm--only disableApplyButton:disabled\"),\n    'disabled': (\"disableApplyButton\"),\n    'data-toggle': (\"toggleDropdown\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\");\n  hashContexts = {'unescaped': depth0};\n  hashTypes = {'unescaped': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"actionButtonText\", {hash:{\n    'unescaped': (\"true\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a>\\n                        <ul class=\\\"dropdown-menu dropdown-menu--up\\\">\\n                            <li data-qa-button=\\\"bottomApplyEmail\\\" class=\\\"dropdown-menu__list-item\\\"><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"displayLocationModal\", \"email\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-envelope\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.applyWithEmail\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                            <li data-qa-button=\\\"bottomApplyLinkedIn\\\" class=\\\"dropdown-menu__list-item\\\"><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"displayLocationModal\", \"linkedIn\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-linkedin\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.applyWithLinkedIn\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                        </ul>\\n                    </div>\\n                \");\n  return buffer;\n  }\n\nfunction program14(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"jobIsSaved\", {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                \");\n  return buffer;\n  }\nfunction program15(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                        <span data-qa-label=\\\"removeJob\\\" class=\\\"mar--sm--lm dontSaveJobText\\\"><a data-qa-link=\\\"removeJob\\\" href=\\\"#\\\" class=\\\"text-underline dontSaveJobLink text-error\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSaveJob\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.iAmNotInterestedInThisJob\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></span>\\n                    \");\n  return buffer;\n  }\n\nfunction program17(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                        <span data-qa-label=\\\"saveJob\\\" class=\\\"mar--sm--lm\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.or\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" <a data-qa-link=\\\"saveJob\\\" href=\\\"#\\\" class=\\\"text-underline saveJobLink\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSaveJob\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.saveThisJob\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.ifYouAreNotReady\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n                    \");\n  return buffer;\n  }\n\nfunction program19(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <hr/>\\n\\n                    <div class=\\\"content__section mar--md--bxl\\\">\\n                        <h3 data-qa-label=\\\"myJobs\\\" class=\\\"mar--sm--tn mar--sm--bn\\\"><span class=\\\"juicon juicon-bookmark text-faded\\\"></span> My jobs</h3>\\n                        <ul class=\\\"list-style-type-none mar--sm--n\\\">\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"application\", \"in\", \"allMyJobs\", {hash:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        </ul>\\n                    </div>\\n                    <hr class=\\\"show-brkpoint--md\\\">\\n                \");\n  return buffer;\n  }\nfunction program20(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\" \\n                                <li class=\\\"mar--sm--bm mar--sm--tm\\\">\\n                                    <h4 data-qa-label=\\\"jobTitle\\\" class=\\\"mar--sm--n\\\"><a data-qa-link=\\\"jobListing\\\" href=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"application.jobPostingUrl\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\" target=\\\"_top\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.jobTitle\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></h4>\\n                                    <h5 class=\\\"mar--sm--n text-faded\\\" data-qa-lable=\\\"primaryLocation\\\">\\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.primaryLocation\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.otherLocationsString\", {hash:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.isRemoteAvailable\", {hash:{},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                    </h5>\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.isApplication\", {hash:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                </li>\\n                            \");\n  return buffer;\n  }\nfunction program21(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\" &amp; <a data-qa-link=\\\"locationJobListing\\\" data-qa-label=\\\"otherLocations\\\"data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"text-primary\\\" data-original-title=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"application.otherLocationsString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.otherLocationsCount\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.otherText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a>\\n                                        \");\n  return buffer;\n  }\n\nfunction program23(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                            <small data-qa-label=\\\"remote\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.remoteAvailable\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\\n                                        \");\n  return buffer;\n  }\n\nfunction program25(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.hasJobOffer\", {hash:{},inverse:self.program(28, program28, data),fn:self.program(26, program26, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                    \");\n  return buffer;\n  }\nfunction program26(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                            <small data-qa-label=\\\"offerStatus\\\" \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":label application.jobLabelClass\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">Offer \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.jobOfferStatus\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\\n                                        \");\n  return buffer;\n  }\n\nfunction program28(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                            <small data-qa-label=\\\"applicationStatus\\\" \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":label application.jobLabelClass\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.statusText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\\n                                        \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"scope-container\\\">\\n    <div \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":load-full showLoadingState::hide\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\\n        <div class=\\\"load-full-icon\\\"></div>\\n    </div>\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"locationModal\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n    <div class=\\\"content pad--sm--tm pad--md--bl\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"column--md--8\\\">\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"jobIsSaved\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"appliedMessage\", {hash:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                <nav id=\\\"jobNav\\\" class=\\\"relative\\\">\\n                    <div class=\\\"button-group float--right show-brkpoint--md\\\">\\n                        <a  data-qa-button=\\\"actionButton\\\" \");\n  hashContexts = {'href': depth0,'class': depth0,'disabled': depth0,'data-toggle': depth0};\n  hashTypes = {'href': \"ID\",'class': \"STRING\",'disabled': \"STRING\",'data-toggle': \"ID\"};\n  options = {hash:{\n    'href': (\"redirectUrl\"),\n    'class': (\":button actionButtonColor :theme-bg-color disableApplyButton:disabled\"),\n    'disabled': (\"disableApplyButton\"),\n    'data-toggle': (\"toggleDropdown\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\" target=\\\"_top\\\">\");\n  hashContexts = {'unescaped': depth0};\n  hashTypes = {'unescaped': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"actionButtonText\", {hash:{\n    'unescaped': (\"true\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a>\\n                        <ul class=\\\"dropdown-menu\\\">\\n                            <li data-qa-button=\\\"applyEmail\\\"class=\\\"dropdown-menu__list-item\\\"><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"displayLocationModal\", \"email\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-envelope\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.applyWithEmail\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                            <li data-qa-button=\\\"applyLinkedIn\\\" class=\\\"dropdown-menu__list-item\\\"><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"displayLocationModal\", \"linkedIn\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-linkedin\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.applyWithLinkedIn\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                        </ul>\\n                    </div>\\n                    <h1 data-qa-label=\\\"postName\\\" class=\\\"has-subheading page__heading\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"jobPosting.Job_Title__c\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h1>\\n                    <h2 data-qa-label=\\\"locations\\\" class=\\\"page__subheading wsn\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"locationString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"isRemoteAvailable\", {hash:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</h2>\\n                </nav>\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers.each.call(depth0, \"field\", \"in\", \"jpFields\", {hash:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                <hr class=\\\"mar--sm--txl mar--sm--bxl\\\">\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers.unless.call(depth0, \"hasJobOffer\", {hash:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers.unless.call(depth0, \"application\", {hash:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            </div>\\n            <div class=\\\"column--md--4 mar--sm--only--txl\\\">\\n                <div class=\\\"button-group width--full inline-block vam width--full--sm--only\\\">\\n                    \\n\\n                    <ul>\\n                        <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickTweet\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-twitter\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.twitter\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                        <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickLinkedIn\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-linkedin\\\"></span> \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.linkedIn\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n\\n                        <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickFacebook\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"><span class=\\\"juicon juicon-facebook\\\"></span> Facebook </a></li>\\n                        \\n                    </ul>\\n\\n\\n                </div>\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"allMyJobs\", {hash:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            </div>\\n\\n            \\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"locationModal\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"modal fade\\\" id=\\\"locationModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal__shell\\\">\\n        <div class=\\\"modal__content\\\">\\n            <div class=\\\"modal__top\\\">\\n                <h2 data-qa-label=\\\"locationTitle\\\" class=\\\"modal__heading\\\" id=\\\"myModalLabel\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.beforeYouBegin\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h2>\\n            </div>\\n            <div class=\\\"modal__body\\\">\\n                <p data-qa-label=\\\"confirmLocation\\\" class=\\\"mar--sm--tn\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.confirmLocation\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</p>\\n                <div class=\\\"form__group\\\">\\n                    <div class=\\\"select__wrap\\\">\\n                        <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                        \");\n  hashContexts = {'content': depth0,'optionValuePath': depth0,'optionLabelPath': depth0,'value': depth0,'data-qa-select': depth0};\n  hashTypes = {'content': \"ID\",'optionValuePath': \"STRING\",'optionLabelPath': \"STRING\",'value': \"ID\",'data-qa-select': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'content': (\"locations\"),\n    'optionValuePath': (\"content.Location__c\"),\n    'optionLabelPath': (\"content.formattedLocationString\"),\n    'value': (\"selectedLocation\"),\n    'data-qa-select': (\"locationSelect\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal__footer\\\">\\n                <button data-qa-button=\\\"cancel\\\" type=\\\"button\\\" class=\\\"button button--secondary\\\" data-dismiss=\\\"modal\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.cancel\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</button>\\n                <button id=\\\"modalOk\\\" data-qa-button=\\\"ok\\\" type=\\\"button\\\" class=\\\"button button--primary\\\" data-dismiss=\\\"modal\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"labels.ok\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=app/templates.js")

eval("(function() {\n\n// Kick off Ember\nApp = Ember.Application.create({\n    rootElement: '#application'\n});\n\nEmber.Handlebars.helper('formatDate', function(value, dateFormat, options) {\n\n  var escaped = typeof value === 'string' ? Handlebars.Utils.escapeExpression(value) : value;\n\n  return new Ember.Handlebars.SafeString(value === null ? 'N/A' : moment.utc(escaped).format(typeof dateFormat === 'string' ? dateFormat : 'MMM D, YYYY'));\n});\n\nApp.SalesforceTwitterComponent = Ember.Component.extend({\n    layoutName: 'components/twitter',\n    didInsertElement: function() {\n        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\"://platform.twitter.com/widgets.js\";fjs.parentNode.insertBefore(js,fjs);}}(document,\"script\",\"twitter-wjs\");\n        Ember.run.later(this, updateHeight, 500);\n    }\n});\n\nfunction findClosestLocation(self, callback){\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            if (Ember.isNone(position)) {\n                var primaryLocation = self.get('locations').findBy('Primary__c', true);\n\n                applyCallback(primaryLocation);\n            } else {\n                var userGeo = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                };\n\n                var closestLocation;\n\n                self.get('locations').forEach(function(l) {\n\n                    if (l.Location__c !== 'Remote') {\n                        var locationGeo = {\n                            latitude: l.Location__r.Geographical_Location__c.latitude,\n                            longitude: l.Location__r.Geographical_Location__c.longitude\n                        };\n\n                        var distance = getGeolocationDistance(userGeo, locationGeo);\n\n                        if (Ember.isNone(closestLocation) || distance < closestLocation.distance) {\n                            closestLocation = l;\n                            closestLocation.distance = distance;\n                        }\n                    }\n                    \n                });\n\n                var locationString = closestLocation.formattedLocationString;\n\n                if (locationString.indexOf('(Primary)') !== -1) {\n                    locationString = locationString.split('(Primary)')[0] + '(Primary, Closest)';\n                } else if (locationString.indexOf('(Closest)') === -1) {\n                    locationString += ' (Closest)';\n                }\n\n                closestLocation.set('formattedLocationString', locationString);\n\n                callback(closestLocation);\n                // find closest location.\n            }\n            \n        }, function(error) {\n            var primaryLocation = self.get('locations').findBy('Primary__c', true);\n\n            callback(primaryLocation);\n        });;\n    } else {\n        var primaryLocation = self.get('locations').findBy('Primary__c', true);\n\n        callback(primaryLocation);\n    }\n}\n\nfunction createLocationStrings(locations){\n    var primaryLocation = '';\n    var otherLocationsString = '';\n\n    locations.forEach(function(jobLoc, index) {\n        var location = jobLoc.Location__r;\n        var locationString = '';\n\n        locationString = location.City__c + ', ' + location.Standardized_State_Province__c;\n\n        if (!Ember.isEmpty(location.Standardized_Country_Region__c) && location.Standardized_Country_Region__c !== 'US') {\n            locationString += ', ' + location.Standardized_Country_Region__c;\n        }\n\n        if (index === 0) {\n            primaryLocation = locationString;\n        } else {\n            otherLocationsString += locationString + ' | ';\n        }\n    });\n\n\n    if(!Ember.isEmpty(otherLocationsString)){\n        otherLocationsString = otherLocationsString.substring(0, otherLocationsString.lastIndexOf(' | '));\n    }\n\n    var obj = {\n        primaryLocation: primaryLocation,\n        otherLocationsString: otherLocationsString,\n        otherLocationsCount: locations.length == 0 ? 0 : locations.length - 1\n    };\n\n    return obj;\n};\n\nfunction parsePostingLocations(locations, allowRemote) {\n    var locationObjs = [];\n    var combinedLocations = '';\n\n    locations.forEach(function(jobLoc, index) {\n        var location = jobLoc.Location__r;\n        var locationString = '';\n\n        locationString = location.City__c + ', ' + location.Standardized_State_Province__c;\n\n        if (!Ember.isEmpty(location.Standardized_Country_Region__c) && location.Standardized_Country_Region__c !== 'US') {\n            locationString += ', ' + location.Standardized_Country_Region__c;\n        }\n\n        if (index === 0) {\n            combinedLocations = locationString += ' (Primary)';\n        } else {\n            combinedLocations += ' | ' + locationString;\n        }\n\n        jobLoc.formattedLocationString = locationString;\n        locationObjs.addObject(Ember.Object.create(jobLoc));\n    });\n\n    if (allowRemote === true) {\n        locationObjs.addObject(Ember.Object.create({\n            Location__c: 'Remote',\n            formattedLocationString: 'Remote'\n        }));\n    }\n\n    return {\n        locationObjs: locationObjs,\n        locationsString: combinedLocations\n    };\n}\n\nfunction updateHeight() {\n    Ember.run.scheduleOnce('afterRender', this, function() {\n        parent.resizeIframe();\n    });\n};\n\nvar globalThis = this;\n\nfunction createSaveObj(jobPosting, loggedInUser, linkedInMap) {\n    var saveObj = {};\n\n    if (!Ember.isNone(linkedInMap)) {\n        if (!Ember.isNone(linkedInMap.educations && !Ember.isEmpty(linkedInMap.educations.values))) {\n            saveObj.educationHistory = convertLinkedInToEducationHistoryObj(linkedInMap.educations.values);\n        }\n\n        if (!Ember.isNone(linkedInMap.positions && !Ember.isEmpty(linkedInMap.positions.values))) {\n            saveObj.employmentHistory = convertLinkedInToEmploymentHistoryObj(linkedInMap.positions.values);\n        }\n    }\n\n    saveObj.application = {\n        Requisition__c: jobPosting.Requisition__c,\n        Contact__c: loggedInUser.ContactId,\n        First_Name__c: loggedInUser.FirstName,\n        Last_Name__c: loggedInUser.LastName,\n        Email__c: loggedInUser.Email,\n        Street_Address__c: !Ember.isNone(linkedInMap) ? linkedInMap.mainAddress : null,\n        Job_Posting__c: jobPosting.Id\n    };\n\n    return saveObj;\n};\n\nfunction convertLinkedInToEducationHistoryObj(educations) {\n    return educations.map(function(e) {\n        // Educations from linkedIn only have year in the startDate/endDate\n\n        return {\n            Education_Level__c: degreePicklistValues.indexOf(e.degree) !== -1 ? e.degree : 'Other',\n            Name: e.schoolName,\n            Status__c: null,\n            Start_Month__c: !Ember.isNone(e.startDate) ? String(e.startDate.month) : null,\n            Start_Year__c: !Ember.isNone(e.startDate) ? e.startDate.year : null,\n            End_Month__c: !Ember.isNone(e.endDate) ? String(e.endDate.month) : null,\n            End_Year__c: !Ember.isNone(e.endDate) ? e.endDate.year : null\n        };\n    });\n}\n\nfunction convertLinkedInToEmploymentHistoryObj(positions) {\n    return positions.map(function(p) {\n        // Positions from LinkedIn only have year and month in startDate/endDate\n\n        return {\n            Name: !Ember.isNone(p.company) ? p.company.name : null,\n            Job_Title__c: p.title,\n            Start_Month__c: !Ember.isNone(p.startDate) ? String(p.startDate.month) : null,\n            Start_Year__c: !Ember.isNone(p.startDate) ? p.startDate.year : null,\n            End_Month__c: !Ember.isNone(p.endDate) ? String(p.endDate.month) : null,\n            End_Year__c: !Ember.isNone(p.endDate) ? p.endDate.year : null,\n            Is_Current__c: p.isCurrent,\n        };\n    });\n}\n\nfunction getGeolocationDistance(p1, p2) {\n    var rad = function(x) { return x * Math.PI / 180 };\n\n    var R = 6371;\n    var dLat  = rad(p2.latitude - p1.latitude);\n    var dLong = rad(p2.longitude - p1.longitude);\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(rad(p1.latitude)) * Math.cos(rad(p2.latitude)) * Math.sin(dLong/2) * Math.sin(dLong/2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n\n    return Math.round(d);\n}\n\nvar degreePicklistValues = [];\n\nif (!Ember.isEmpty(jobPostingMap.degreeFields)) {\n    degreePicklistValues = jobPostingMap.degreeFields.getEach('value');\n}\n\nvar numberToMonthMap = {\n    '1' : 'January',\n    '2' : 'February',\n    '3' : 'March',\n    '4' : 'April',\n    '5' : 'May',\n    '6' : 'June',\n    '7' : 'July',\n    '8' : 'August',\n    '9' : 'September',\n    '10' : 'October',\n    '11' : 'November',\n    '12' : 'December'\n};\n\nEmber.View.reopen({\n    willInsertElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    },\n    willDestroyElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    }\n});\n\nApp.LocationModalView = Ember.View.extend({\n    templateName: 'locationModal',\n    didInsertElement: function() {\n        \n    }\n});\n\nApp.JobPostingView = Ember.View.extend({\n    didInsertElement: function() {\n        $('body').tooltip({\n            selector: '[data-toggle=tooltip]'\n        });\n\n        $('body').on('touchstart.jui.dropdown', '.dropdown-menu', function (e) { \n            e.stopPropagation(); \n        });\n        \n        $('.dropdown-menu').on('touchstart.dropdown.data-api', function(e) { e.stopPropagation() });\n\n        if (parent && parent.toggleFooter) {\n            parent.toggleFooter();\n        }\n    }\n});\n\nApp.JobPostingController = Ember.ObjectController.extend({\n    jobIsSaved: function(){\n        return this.get('isJobSaved') && Ember.isNone(this.get('application'));\n    }.property('isJobSaved', 'application'),\n    hasJobOffer : function(){\n        var application = this.get('application')\n        return !Ember.isNone(application) && !Ember.isNone(application.Job_Offers__r)\n    }.property(),\n    redirectUrl : function(){\n        var application = this.get('application');\n        var href = '';\n        \n        if (this.get('hasJobOffer')) {\n            return '/' + parent.urlPrefix.split('/')[1] + '/' + extnamespace + 'to_offerLetterCandidate?id=' + application.Job_Offers__r.records[0].Id;\n        } else if(!Ember.isNone(application) && application.Status__c === 'In Progress'){\n            return parent.urlPrefix + '/Apply?id=' + application.Id;\n        } \n        \n        return href;\n    }.property('hasJobOffer', 'application'),\n    toggleDropdown : function(){\n        return Ember.isEmpty(this.get('redirectUrl')) ? 'dropdown' : '';\n    }.property('redirectUrl'),\n    actionButtonColor : function(){\n        var application = this.get('application');\n        return !Ember.isEmpty(application) && (application.Status__c == 'In Progress' || !Ember.isEmpty(application.Job_Offers__r)) ? 'button--success' : 'button--primary';\n    }.property(),\n    actionButtonText : function(){\n        var application = this.get('application')\n    \n        if (!Ember.isNone(application) && !Ember.isNone(application.Job_Offers__r) \n                    && ['Extended', 'Accepted', 'Declined'].indexOf(application.Job_Offers__r.records[0].Status__c) !== -1) {\n            return labels.viewOffer;\n        } else if(!Ember.isNone(application) && application.Status__c === 'In Progress'){\n            return labels.finish;\n        } else {\n            return labels.apply + ' <span class=\"show-brkpoint--md\">' + labels.now + '</span>'\n        }\n    }.property(),\n    appliedAlertClass: function() {\n        var application = this.get('application');\n\n        if (!Ember.isNone(application)) {\n            var hasOffer = !Ember.isNone(application.Job_Offers__r);\n            var isToday = moment().diff(moment(application.Applied_On__c), 'hours') < 24;\n            var isCompleted = application.Status__c === 'Completed'\n\n            if ((!hasOffer && isCompleted && isToday) || (hasOffer && application.Job_Offers__r.records[0].Status__c === 'Extended')) {\n                return 'alert--success';\n            } else if (!hasOffer && !isCompleted) {\n                return 'alert--warning';\n            } else {\n                return 'alert--info';\n            }\n        } else {\n            return null;\n        }\n    }.property('application'),\n    appliedMessage: function() {\n        var application = this.get('application');\n\n        if (!Ember.isNone(application)) {\n            var hasOffer = !Ember.isNone(application.Job_Offers__r);\n            var isToday = moment().diff(moment(application.Applied_On__c), 'hours') < 24;\n            var isCompleted = application.Status__c === 'Completed'\n\n            if (!hasOffer && isCompleted && isToday) {\n                return labels.thankYou;\n            } else if (!hasOffer && isCompleted && !isToday){\n                return labels.youAppliedOn + ' ' + moment(application.Applied_On__c).format('MMM D, YYYY') + '.';\n            } else if (!hasOffer && !isCompleted) {\n                var appliedMessage = '';\n                var numDaysSinceApply = moment().diff(moment(application.CreatedDate), 'days');\n\n                if (numDaysSinceApply === 0) {\n                    appliedMessage = labels.appliedToday;\n                } else if (numDaysSinceApply === 1) {\n                    appliedMessage = labels.appliedYesterday;\n                } else {\n                    appliedMessage = labels.appliedMultilpleDays + ' ' + moment().diff(moment(application.CreatedDate), 'days') + ' ' + labels.daysAgo;\n                }\n\n                appliedMessage += ' <a href=\"' + this.get('redirectUrl') + '\" target=\"_top\">' + labels.finishNow + '</a>';\n                return appliedMessage;\n            } else if (hasOffer && application.Job_Offers__r.records[0].Status__c === 'Extended') {\n                return labels.offeredJob;\n            } else {\n                return null;\n            }\n        }\n        \n        return null;\n    }.property(),\n    disableApplyButton: function() {\n        var application = this.get('application')\n        if(!Ember.isEmpty(application) && Ember.isEmpty(application.Job_Offers__r) && application.Status__c == 'Completed'){\n            return 'disabled';\n        }\n\n        return false;\n    }.property(),\n    apply : function(applyType){\n        var self = this;\n        var applyUrl = parent.urlPrefix + '/Apply?reqId=' + self.get('jobPosting').Requisition__c + '&jobPostingId=' + self.get('jobPosting').Id\n\n        if (self.get('selectedLocation') === 'Remote') {\n            applyUrl += '&prefersRemote=true&locationId=' + self.get('locations').findBy('Primary__c', true).Location__c;\n        } else {\n            applyUrl += '&locationId=' + self.get('selectedLocation')\n        }\n\n        if(applyType == 'email'){\n            window.parent.location.href = applyUrl;\n        } else {\n            applyUrl += '&importLinkedIn=true';\n\n            if (!Ember.isNone(self.get('linkedInMap'))) {\n                window.parent.location.href = applyUrl;\n            } else {\n                window.parent.location.href = self.get('applyWithLinkedInUrl') + applyUrl.replace(/&/g, '%26');\n            }\n        }\n    },\n    actions: {\n        displayLocationModal : function(applyType) {\n            var self = this;\n\n            if (self.get('locations').length === 1) {\n                self.apply(applyType);\n            } else {\n                var applyCallback = function(selectedLocation) {\n                    self.set('showLoadingState', false);\n                    $('#locationModal').modal({\n                        show: true,\n                    });\n\n                    var bodyHeight = $('body').height();\n                    var modalHeight = $('.modal__shell').outerHeight(true);\n\n                    if (modalHeight > bodyHeight) {\n                        $('body').height(modalHeight);\n                    }\n                    \n                    parent.resizeIframe();\n\n                    window.parent.scrollTo(0,0);\n\n                    if (!Ember.isNone(selectedLocation)) {\n                        self.set('selectedLocation', selectedLocation.Location__c);\n                    }\n\n                    $('#modalOk').click(function() {\n                        self.apply(applyType);\n                    });\n                };\n                self.set('showLoadingState', true);\n                findClosestLocation(self, applyCallback);\n            }\n        },\n        clickTweet: function() {\n            var url = window.location.href;\n            var tweetString = 'Check out this #dreamjob ' + url;\n            var width = 626;\n            var height = 436;\n            var left = (screen.width / 2) - (width / 2);\n            var top = (screen.height / 2) - (height / 2);\n\n            window.open('http://www.twitter.com/intent/tweet?text=' + encodeURIComponent(tweetString),\n                        'toolbar=0, status=0, width=' + width + ',height=' + height + ',top=' + top + ',left=' + left +\n                        'menubar=no, toolbar=no, resizable=yes, scrollbars=yes');\n\n            return false;\n        },\n\n\n\n        clickLinkedIn: function (){\n            var url = window.location.href;\n            var title = 'Title';\n            var source = 'https://www.appiphony.com'; // This does not show up anywhere except on url\n            var summary = 'Summary';\n            var docTitle = document.title; // This is the document where the Share Button is\n            var width = 626;\n            var height = 436;\n            var left = (screen.width / 2) - (width / 2);\n            var top = (screen.height / 2) - (height / 2);\n\n            window.open('http://www.linkedin.com/shareArticle?mini=true&url='+ \n                        encodeURIComponent(url) + '&title=' + encodeURIComponent(title) + \n                        '&source=' + encodeURIComponent(source) + '&summary=' + encodeURIComponent(summary) + '&t=' + encodeURIComponent(docTitle),\n                        'sharer', 'toolbar=0, status=0, width=' + width + ',height=' + height + ',top=' + top + ',left=' + left +\n                        'menubar=no, toolbar=no, resizable=yes, scrollbars=yes');\n\n            return false;\n        },\n\n\n\n        clickFacebook: function (){\n            console.log('JOB POSTING MAP');\n            console.log(this.get('jobPosting'));\n\n\n            var url = window.location.href;\n            var docTitle = document.title; // This is the document where the Share Button is\n            var width = 626;\n            var height = 436;\n            var left = (screen.width / 2) - (width / 2);\n            var top = (screen.height / 2) - (height / 2);\n\n\n            console.log('URLLL: ');\n            console.log(encodeURIComponent(url));\n            console.log('DOCTITLE: ');\n            console.log(docTitle);\n\n            window.open('http://www.facebook.com/sharer.php?u='+ \n                        encodeURIComponent(url)+ '&t=' + encodeURIComponent(docTitle),\n                        'sharer', 'toolbar=0, status=0, width=' + width + ',height=' + height + ',top=' + top + ',left=' + left +\n                        'menubar=no, toolbar=no, resizable=yes, scrollbars=yes');\n \n            return false;\n        },\n\n\n        // clickFacebook2: function (){\n        //     FB.ui({\n        //         method: 'feed',\n        //         name: 'Facebook Dialogs',\n        //         link: 'https://developers.facebook.com/docs/dialogs/',\n        //         picture: 'http://fbrell.com/f8.jpg',\n        //         caption: 'Reference Documentation',\n        //         description: 'Dialogs provide a simple, consistent interface for applications to interface with users.'\n        //     });\n\n            \n        //     FB.ui({\n        //         method: 'share',\n        //         href: 'https://developers.facebook.com/docs/',\n        //     }, function(response){});\n\n        //     return false;\n        // },\n\n\n\n        toggleSaveJob: function (){\n            if(this.get('isSaving')){\n                return;\n            }\n\n            this.set('isSaving', true);\n            \n            // Check if user is loged in\n            var self = this;\n            var jobPosting = self.get('jobPosting');\n            if (this.get('loggedInUser').UserType == 'Guest') {\n                window.parent.location.href = parent.urlPrefix + '/Login?startURL=' + parent.urlPrefix + '/JobListing?id%3D' + self.get('jobPosting').Id + '%26saveJob%3Dtrue';\n                return;\n            }\n\n            var interestObj;\n            \n            if(Ember.isEmpty(this.get('savedJob'))){\n                interestObj = {\n                    Job_Posting__c: jobPosting.Id,\n                    Name: jobPosting.Job_Title__c,\n                    Candidate_User__c: self.get('loggedInUser').Id,\n                    Expressed_By__c: 'Candidate', // Picklist\n                    Source_Requisition__c: jobPosting.Requisition__c,\n                    Position__c: jobPosting.Requisition__r.Position__c\n                }\n            } else {\n                interestObj = this.get('savedJob');\n            }\n            \n            var linkedInMap = this.get('linkedInMap');\n\n            if (!Ember.isNone(linkedInMap)) {\n                if (!Ember.isNone(linkedInMap.educations && !Ember.isEmpty(linkedInMap.educations.values))) {\n                    var educationHistories = convertLinkedInToEducationHistoryObj(linkedInMap.educations.values);\n                    var flattenedEducationHistory = '';\n\n                    educationHistories.forEach(function(eh) {\n                        // add education history to flattened string\n                        flattenedEducationHistory += eh.Name__c + '\\n'\n                                    + eh.Education_Level__c;\n\n                        if (!Ember.isNone(eh.Status__c)) {\n                            flattenedEducationHistory += ' (' + eh.Status__c + ')';\n                        } \n                        \n                        flattenedEducationHistory += '\\n' \n                                                  + eh.Start_Year__c\n                                                  + ' - ' + eh.End_Year__c\n                                                  + '\\n\\n';\n                    });\n\n                    interestObj.Education_History__c = flattenedEducationHistory;\n                }\n\n                if (!Ember.isNone(linkedInMap.positions && !Ember.isEmpty(linkedInMap.positions.values))) {\n                    var employmentHistories = convertLinkedInToEmploymentHistoryObj(linkedInMap.positions.values);\n                    var flattenedEmploymentHistory = '';\n\n                    employmentHistories.forEach(function(eh) {\n                        // add employment history to flattened string\n                        flattenedEmploymentHistory += eh.Name + '\\n'\n                                    + eh.Job_Title__c + '\\n';\n\n                        if (!Ember.isNone(eh.Start_Month__c)){\n                            flattenedEmploymentHistory += numberToMonthMap[eh.Start_Month__c] + ' ';\n                        }\n\n                        flattenedEmploymentHistory += eh.Start_Year__c + ' - ';\n\n                        if (eh.Is_Current__c == true) {\n                            flattenedEmploymentHistory += 'present';\n                        } else if (!Ember.isNone(eh.End_Month__c)) {\n                            flattenedEmploymentHistory += numberToMonthMap[eh.End_Month__c] + ' ';\n                        }\n\n                        if (!Ember.isNone(eh.End_Year__c)) {\n                            flattenedEmploymentHistory += eh.End_Year__c;\n                        }\n\n                        flattenedEmploymentHistory += '\\n\\n';\n                    });\n                    interestObj.Employment_History__c = flattenedEmploymentHistory;\n                }\n\n                if (!Ember.isNone(linkedInMap.skills && !Ember.isEmpty(linkedInMap.skills.values))) {\n                    var skillsArray = [];\n                    linkedInMap.skills.values.forEach(function(skill) {\n                        skillsArray.addObject(skill.skill.name);\n                    });\n                    interestObj.Skills__c = skillsArray.join(', ');\n                }\n            }\n\n            cont.saveJob(JSON.stringify(interestObj), function(results, responseObj){\n                var parsedResult = parseResult(results);\n                self.set('isSaving', false);\n                if(!Ember.isEmpty(parsedResult.data.savedJob)){\n                    var savedJob = parsedResult.data.savedJob;\n                    var jobObj = {\n                        Id : savedJob.Id,\n                        jobTitle: interestObj.Name,\n                        jobPostingUrl: parent.urlPrefix + '/JobPosting?id=' + interestObj.Job_Posting__c,\n                        otherText : jobPosting.locations.length > 2 ? labels.others : labels.other\n                    };\n\n                    jobObj = $.extend(jobObj, createLocationStrings(jobPosting.locations));\n                    self.get('allMyJobs').insertAt(0, jobObj);\n                    self.set('savedJob', savedJob);\n                    self.set('recentSave', true);\n                    self.set('isJobSaved', true);\n                } else {\n                    var savedJob = self.get('allMyJobs').findBy('Id', self.get('savedJob').Id);\n                    self.set('isJobSaved', false);\n                    self.set('savedJob', null);\n                    self.get('allMyJobs').removeObject(savedJob);\n                }\n\n                window.parent.scrollTo(0,0);\n            });\n        }\n    }\n});    \n\n// Routes\nApp.JobPostingRoute = Ember.Route.extend( {\n    model: function(params) {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            jobPostingMap.isRemoteAvailable = jobPostingMap.jobPosting.Requisition__r.Allow_Remote_Employees__c;\n\n            var parsedLocations = parsePostingLocations(jobPostingMap.jobPosting.locations, jobPostingMap.isRemoteAvailable);\n            jobPostingMap.locationString = parsedLocations.locationsString;\n            jobPostingMap.locations = parsedLocations.locationObjs;\n\n            //set the values of the field so we can use it easily on the template\n            jobPostingMap.jpFields.forEach(function(f) {\n                f.value = jobPostingMap.jobPosting[f.name];\n            });\n\n            var allMyJobs = Ember.A();\n            \n            jobPostingMap.applications.forEach(function(app) {\n                \n                var applicationObj = {\n                    jobTitle: app.Job_Posting__r.Job_Title__c,\n                    jobPostingUrl: parent.urlPrefix + '/JobListing?id=' + app.Job_Posting__c,\n                    isApplication: true,\n                    hasJobOffer: !Ember.isEmpty(app.Job_Offers__r),\n                    jobOfferStatus: !Ember.isEmpty(app.Job_Offers__r) ? app.Job_Offers__r.records[0].Status__c : null,\n                    statusText: app.Status__c === 'Completed' ? 'Applied' : 'In Progress',\n                    isRemoteAvailable: app.Requisition__r.Allow_Remote_Employees__c,\n                    otherText : app.locations.length > 2 ? labels.others : labels.other\n                };\n\n                applicationObj = $.extend(applicationObj, createLocationStrings(app.locations));\n\n                if (!Ember.isEmpty(app.Job_Offers__r)) {\n                    if(app.Job_Offers__r.records[0].Status__c == 'Declined'){\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--success';\n                    }\n                } else {\n                    if (app.Status__c === 'In Progress') {\n                        applicationObj.jobLabelClass = 'label--warning';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    }\n                }\n\n                allMyJobs.addObject(applicationObj);\n            });\n\n            jobPostingMap.savedJobs.forEach(function(savedJob) {\n                    var jobObj = {\n                        Id : savedJob.Id,\n                        jobTitle: savedJob.Job_Posting__r.Job_Title__c,\n                        jobPostingUrl: parent.urlPrefix + '/JobListing?id=' + savedJob.Job_Posting__c,\n                        isSavedJob: true,\n                        otherText : savedJob.locations.length > 2 ? labels.others : labels.other,\n                        isRemoteAvailable: savedJob.Source_Requisition__r.Allow_Remote_Employees__c,\n                    };\n                    console.log(savedJob.locations.length)\n                    console.log(jobObj);\n                    jobObj = $.extend(jobObj, createLocationStrings(savedJob.locations));\n                    allMyJobs.addObject(jobObj);\n            });\n\n            jobPostingMap.allMyJobs = allMyJobs.sortBy('CreatedDate').reverse();\n            jobPostingMap.applyWithLinkedInUrl = jobPostingMap.linkedInSsoUrl ? jobPostingMap.linkedInSsoUrl + '?community=https://' + parent.communityUrl + '&' + 'startURL=' : null;\n            resolve(jobPostingMap);\n        });\n    },\n    setupController: function(controller, model) {\n        controller.set('model', model);\n\n        if (parent.saveJob === true && Ember.isNone(model.savedJob)) {\n            controller.send('saveJob');\n        }\n    }\n});\n\n// Router\nApp.Router.map(function() {\n    this.resource('jobPosting', { path: '/' });\n});\n\n\n// This setting disables the detail routing from showing up in the navbar.\nApp.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=app/tore_jobListing.js")