eval("(function() {\n\nEmber.TEMPLATES[\"components/twitter\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<a class=\\\"twitter-timeline\\\"\\n   width=\\\"100%\\\"\\n   height=\\\"300\\\"\\n   href=\\\"https://twitter.com/salesforcejobs\\\"\\n   data-widget-id=\\\"565570508859916289\\\"\\n   data-chrome=\\\"noheader nofooter\\\"\\n   data-border-color=\\\"#dadee2\\\">\\n    Tweets by @salesforcejobs\\n</a>\");\n  \n});\n\nEmber.TEMPLATES[\"jobSearch\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || (depth0 && depth0.partial)),stack1 ? stack1.call(depth0, \"searchBar\", options) : helperMissing.call(depth0, \"partial\", \"searchBar\", options))));\n  data.buffer.push(\"\\n\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || (depth0 && depth0.partial)),stack1 ? stack1.call(depth0, \"searchResults\", options) : helperMissing.call(depth0, \"partial\", \"searchResults\", options))));\n  data.buffer.push(\"\\n\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"pleaseLoginModal\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"pleaseLoginModal\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<div class=\\\"scope-container brand__border-accent--top\\\" style=\\\"border-top-color: #cf5c60\\\">\\n    <div class=\\\"modal fade in\\\" id=\\\"pleaseLoginModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal__shell\\\">\\n            <div class=\\\"modal__content\\\">\\n                <div class=\\\"modal__top\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                        <span class=\\\"close-modal-x\\\"></span><span class=\\\"sr-only\\\">Close</span>\\n                    </button>\\n                    <h2 class=\\\"modal__heading\\\" id=\\\"myModalLabel\\\">Please login to save this job</h2>\\n                </div>\\n                <div class=\\\"modal__body\\\">\\n                    Youâ€™ll need to register or log in to save this job. Would you like to do that now?</div>\\n                <div class=\\\"modal__footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"button button--secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                    <button id=\\\"modalOk\\\"  type=\\\"button\\\" class=\\\"button button--primary\\\">OK</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\");\n  \n});\n\nEmber.TEMPLATES[\"searchBar\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                <div class=\\\"form__group mar--sm--tm mar--md--bn\\\">\\n                                    <div class=\\\"input__wrap has-icon--right\\\">\\n                                        <div class=\\\"input__icon juicon juicon-chch\\\"></div>\\n                                        \");\n  hashContexts = {'type': depth0,'placeholder': depth0,'class': depth0,'value': depth0};\n  hashTypes = {'type': \"STRING\",'placeholder': \"STRING\",'class': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'type': (\"text\"),\n    'placeholder': (\"City, State or Zip\"),\n    'class': (\"bg-1\"),\n    'value': (\"nearValue\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                                    </div>\\n                                </div>\\n                            \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', hashContexts, hashTypes;\n  data.buffer.push(\"\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"column--sm--6\\\">\\n                                        <div class=\\\"form__group mar--md--tm mar--md--bn\\\">\\n                                            <div class=\\\"select__wrap\\\">\\n                                                <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                                \");\n  hashContexts = {'content': depth0,'value': depth0};\n  hashTypes = {'content': \"ID\",'value': \"ID\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'content': (\"radiusOptions\"),\n    'value': (\"selectedRadius\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"column--sm--6\\\">\\n                                        <div class=\\\"form__group mar--md--tm mar--md--bn\\\">\\n                                            <div class=\\\"select__wrap\\\">\\n                                                <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                                \");\n  hashContexts = {'content': depth0,'value': depth0};\n  hashTypes = {'content': \"ID\",'value': \"ID\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'content': (\"radiusUnits\"),\n    'value': (\"selectedUnit\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"showResultsCount\", {hash:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                \");\n  return buffer;\n  }\nfunction program6(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                        <span class=\\\" text-white\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"numberOfJobs\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"  <span class=\\\"text-faded\\\">jobs found</span></span>\\n                    \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"scope-container\\\">\\n    <div class=\\\"community-hero mar--sm--bm\\\" style=\\\"background: #33536d;\\\">\\n        <div class=\\\"community-hero__bg\\\" style=\\\"background-image: url('http://www.salesforce.com/assets/images/careers/business-background.jpg')\\\"></div>\\n        <div class=\\\"content community-hero__content\\\" style=\\\"max-width: 700px; margin: 0 auto;\\\">\\n            <h1 class=\\\"text-center mar--md--bxl mar--md--txl\\\"><span class=\\\"text-white\\\">Find your #dreamjob</span></h1>\\n            <div class=\\\"table-group mar--md--bxl\\\">\\n                <div class=\\\"table-group__object--large block-on-small pad--sm--only--rn\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--md--bn\\\">\\n                                <div class=\\\"input__wrap has-icon--right\\\">\\n                                    <div class=\\\"input__icon juicon juicon-search\\\"></div>\\n                                    \");\n  hashContexts = {'type': depth0,'placeholder': depth0,'class': depth0,'value': depth0};\n  hashTypes = {'type': \"STRING\",'placeholder': \"STRING\",'class': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'type': (\"text\"),\n    'placeholder': (\"Search jobs...\"),\n    'class': (\"bg-1\"),\n    'value': (\"searchTerm\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--md--bn\\\">\\n                                <div class=\\\"select__wrap\\\">\\n                                    <div class=\\\"input__icon juicon juicon-down\\\"></div>\\n                                    \");\n  hashContexts = {'content': depth0,'value': depth0};\n  hashTypes = {'content': \"ID\",'value': \"ID\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'content': (\"jobFamilies\"),\n    'value': (\"selectedJobFamily\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            <div class=\\\"form__group mar--sm--tm mar--md--bn\\\">\\n                                <div class=\\\"select__wrap\\\">\\n                                    <div class=\\\"input__icon juicon juicon-location\\\"></div>\\n                                    \");\n  hashContexts = {'content': depth0,'value': depth0};\n  hashTypes = {'content': \"ID\",'value': \"ID\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n    'content': (\"locations\"),\n    'value': (\"selectedLocation\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"column--md--6\\\">\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"isNear\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"isNearMe\", {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"table-group__object--small pad--md--lm block-on-small width--full--sm--only mar--sm--only--bxl\\\">\\n                    <button type=\\\"button\\\" \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":button :button--primary :width--full--sm--only :theme-bg-color isSearching:load-this\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickSearch\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Search</button>\\n                </div>\\n            </div>\\n            <h1 class=\\\"text-center mar--sm--tn mar--sm--bxl\\\">\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers['if'].call(depth0, \"searchResults\", {hash:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            </h1>\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"searchResults\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <div class=\\\"card\\\"> \\n                        <div class=\\\"card__body\\\">\\n\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobAppliedCompleted\", {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n                            \\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"column--md--8\\\">\\n                                    <h1 class=\\\"page__heading has-subheading\\\"><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickApply\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"searchResult.Name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></h1>\\n\\n                                    <h2 class=\\\"page__subheading\\\">\\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"searchResult.firstLocationString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \\n                                        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"searchResult.otherLocationsString\", {hash:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                    </h2>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"card__text\\\">\\n                                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"field\", \"in\", \"searchResult.fieldsToDisplay\", {hash:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            </div>\\n                        </div>\\n                    </div>\\n                \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n                                <button href=\\\"#\\\" class=\\\"float--right button button--success mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\" disabled=\\\"disabled\\\">Applied</button>\\n                            \");\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobAppliedInProgress\", {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                    <a href=\\\"#\\\" class=\\\"float--right button button--success mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"finishApplication\", \"searchResult\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Finish</a>\\n                                \");\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"searchResult.isJobSaved\", {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                \");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n                                        <button href=\\\"#\\\" class=\\\"float--right button button--success mar--sm--only--rs mar--md--lxs show-brkpoint--md\\\">Saved</button> \\n                                    \");\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                        <a href=\\\"#\\\" class=\\\"float--right button button--primary  theme-bg-color mar--sm--only--rs mar--md--lxs show-brkpoint--md theme-bg-color\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveJob\", \"searchResult\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Save</a>\\n                                    \");\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\" &amp;\\n                                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"isAndroid\", {hash:{},inverse:self.program(15, program15, data),fn:self.program(13, program13, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                        \");\n  return buffer;\n  }\nfunction program13(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                                <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"pointer text-primary text-underline\\\" data-original-title=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"searchResult.otherLocationsString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"searchResult.otherLocationsCount\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" others</a>\\n                                            \");\n  return buffer;\n  }\n\nfunction program15(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                                <a href=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"searchResult.jobPostingUrl\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\" target=\\\"_top\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"pointer text-primary text-underline\\\" data-original-title=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"searchResult.otherLocationsString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"searchResult.otherLocationsCount\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" others</a>\\n                                            \");\n  return buffer;\n  }\n\nfunction program17(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"field.value\", {hash:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                                \");\n  return buffer;\n  }\nfunction program18(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                        <div class=\\\"job-field\\\">\\n                                            <h4 class=\\\"job-field-label\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"field.label\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h4>\\n                                            \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"field.value\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                        </div>\\n                                    \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"scope-container brand__border-accent--top\\\" style=\\\"border-top-color: #cf5c60\\\">\\n    <div class=\\\"content pad--md--txl pad--md--bl\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"column--md--8\\\">\\n\\n                <div class=\\\"alert alert--success mar--md--bm hide\\\">\\n                    <button type=\\\"button\\\" class=\\\"close show-brkpoint--sm--only\\\" data-dismiss=\\\"alert\\\"><span class=\\\"alert-close-x\\\"></span><span class=\\\"sr-only\\\">Close</span></button>\\n                    <button type=\\\"button\\\" class=\\\"close close-timeout show-brkpoint--md\\\">\\n                        <svg class=\\\"close-progress\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 40 40\\\" enable-background=\\\"new 0 0 40 40\\\">\\n                            <circle class=\\\"progress-track progress-track--success\\\" cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"19\\\" opacity=\\\"0\\\" stroke=\\\"#000\\\" stroke-width=\\\"2.5\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\" fill=\\\"none\\\"></circle>\\n                            <path d=\\\"M20 1c10.45 0 19 8.55 19 19s-8.55 19-19 19-19-8.55-19-19 8.55-19 19-19z\\\" class=\\\"progress progress--success\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\" fill=\\\"none\\\"></path></svg>\\n                        <span class=\\\"alert-close-x\\\"></span><span class=\\\"sr-only\\\">Close</span>\\n                    </button>\\n                    <strong>You've successfully applied for this job.</strong>\\n                </div> \\n\\n                \\n                \");\n  hashContexts = {'itemController': depth0};\n  hashTypes = {'itemController': \"STRING\"};\n  stack1 = helpers.each.call(depth0, \"searchResult\", \"in\", \"searchResults\", {hash:{\n    'itemController': (\"jobPosting\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            </div>\\n\\n            \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || (depth0 && depth0.partial)),stack1 ? stack1.call(depth0, \"sideBar\", options) : helperMissing.call(depth0, \"partial\", \"sideBar\", options))));\n  data.buffer.push(\"\\n\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"sideBar\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n        <div class=\\\"content__section mar--md--bxl\\\">\\n            <h3 class=\\\"mar--sm--tn mar--sm--bn\\\"><span class=\\\"juicon juicon-bookmark text-faded\\\"></span> My jobs</h3>\\n            <ul class=\\\"list-style-type-none mar--sm--n\\\">\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"application\", \"in\", \"allMyJobs\", {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            </ul>\\n        </div>\\n        <hr class=\\\"show-brkpoint--md\\\">\\n    \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\" \\n                    <li class=\\\"mar--sm--bm mar--sm--tm\\\">\\n                        <h4 class=\\\"mar--sm--n\\\"><a href=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"application.jobPostingUrl\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\" target=\\\"_top\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.jobTitle\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></h4>\\n                        <h5 class=\\\"mar--sm--n text-faded\\\">\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.firstLocationString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.otherLocationsString\", {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.isRemoteAvailable\", {hash:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        </h5>\\n                        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.isApplication\", {hash:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                    </li>\\n                \");\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\" &amp;\\n                                <a href=\\\"#\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"pointer text-primary text-underline\\\" data-original-title=\\\"\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"application.otherLocationsString\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\\">\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.otherLocationsCount\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.locationString || (depth0 && depth0.locationString)),stack1 ? stack1.call(depth0, \"application.otherLocationsCount\", options) : helperMissing.call(depth0, \"locationString\", \"application.otherLocationsCount\", options))));\n  data.buffer.push(\"\\n                                </a>\\n                            \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n                                <small>(remote available)</small>\\n                            \");\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"application.hasJobOffer\", {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                        \");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                <small \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":label application.jobLabelClass\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">Offer \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.jobOfferStatus\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\\n                            \");\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                <small \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":label application.jobLabelClass\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"application.statusText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</small>\\n                            \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"column--md--4\\\">\\n\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"allMyJobs\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n    <div class=\\\"content__section\\\" data-twttr-id=\\\"twttr-sandbox-0\\\">\\n        <h3 class=\\\"mar--sm--tn mar--sm--bm\\\">\\n            <span class=\\\"juicon juicon-twitter text-faded\\\"></span> \\n            <a href=\\\"https://www.twitter.com/salesforcejobs\\\">@Salesforcejobs</a>\\n        </h3>\\n\\n        \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"salesforce-twitter\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n    </div>\\n</div>\\n\\n\\n\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=app/templates.js")

eval("(function() {\n\n// Kick off Ember\nApp = Ember.Application.create({\n    rootElement: '#application'\n});\n\n\nfunction createLocationStrings(locations){\n\n    var firstLocationString = '';\n    var otherLocationsString;\n    var otherLocationsCount = 0;\n\n    locations.forEach(function(l, i) {\n        var location = '';\n\n        location = l.Location__r.City__c + ', ' + l.Location__r.State_Province__c;\n\n        if (!Ember.isEmpty(l.Location__r.Country_Province__c) && l.Location__r.Country_Province__c !== 'United States') {\n            location += ', ' + l.Location__r.Country_Province__c;\n        }\n\n        if (i === 0) {\n            firstLocationString = location;\n        } else if (i === 1) {\n            otherLocationsCount++;\n            otherLocationsString = location;\n        } else {\n            otherLocationsCount++;\n            otherLocationsString += ', ' + location;\n        }\n    });\n \n    var obj = {\n        firstLocationString: firstLocationString,\n        otherLocationsString: otherLocationsString,\n        otherLocationsCount: otherLocationsCount\n    };\n\n    return obj;\n};\n\n\n\nvar updateHeight = function() {\n    Ember.run.scheduleOnce('afterRender', this, function() {\n        parent.resizeIframe();\n    });\n};\n\nvar globalThis = this;\n\nEmber.View.reopen({\n    willInsertElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    },\n    willDestroyElement: function() {\n        Ember.run.debounce(globalThis, updateHeight, 100);\n    }\n});\n\n// Helper to show otheR when there is one location or otherS when there are multiple locations\nEmber.Handlebars.helper('locationString', function(counter) {\n    if (parseInt(counter) == 1) {\n        return 'other';\n    } else {\n        return 'others';\n    }\n});\n\n\nApp.PleaseLoginModalView = Ember.View.extend({\n    templateName: 'pleaseLoginModal',\n    didInsertElement: function() {\n        \n    }\n});\n\n\nApp.JobSearchView = Ember.View.extend({\n    didInsertElement: function() {\n        $('body').tooltip({\n            selector: '[data-toggle=tooltip]'\n        });\n    },\n    keyPress: function(e) {\n        if (e.keyCode === 13) {\n            this.get('controller').send('clickSearch');\n        }\n    }\n});\n\n\nApp.SalesforceTwitterComponent = Ember.Component.extend({\n    layoutName: 'components/twitter',\n    didInsertElement: function() {\n        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\"://platform.twitter.com/widgets.js\";fjs.parentNode.insertBefore(js,fjs);}}(document,\"script\",\"twitter-wjs\");\n        Ember.run.later(this, updateHeight, 1000);\n    }\n});\n\n\nApp.JobSearchController = Ember.ObjectController.extend({\n    isAndroid: function(){\n        var ua = navigator.userAgent.toLowerCase();\n        var isAndroid = ua.indexOf(\"android\") > -1;\n        if(isAndroid) {\n            return true;\n        } else {\n            return false\n        }\n    }.property(),\n\n    allMyJobs: function(){\n        var applications = this.get('applications');\n        var savedJobs = this.get('savedJobs');\n\n        console.log('APPLICATIONS');\n        console.log(applications);\n        console.log('SAVE JOBS');\n        console.log(savedJobs); \n\n        var allMyJobsArray = applications.concat(savedJobs).sortBy('CreatedDate').reverse();\n\n        console.log('ALL MY JOBS'); \n        console.log(allMyJobsArray)\n\n        return allMyJobsArray;\n    }.property('applications', 'savedJobs'),\n\n    init: function() {\n        this._super();\n\n        var searchTerm\n            , nearValue;\n\n        if (!Ember.isEmpty(parent.searchTerm)) {\n            searchTerm = decodeURI(parent.searchTerm);\n            this.set('searchTerm', searchTerm);\n        }\n\n        if (!Ember.isEmpty(parent.nearValue)) {\n            nearValue = decodeURI(parent.nearValue);\n            this.set('selectedLocation', 'Near...');\n            this.set('nearValue', nearValue);\n        } else {\n            this.set('nearValue', 'San Francisco');\n            this.set('selectedLocation', 'Near...');\n        }\n\n        Ember.run.later(this, function() {\n            this.search(false);\n        }, 1000);\n    },\n    searchTerm: null,\n    selectedLocation: null,\n    selectedJobFamily: null,\n    nearValue: null,\n    selectedRadius: null,\n    selectedUnit: null,\n    numberOfJobs: function() {\n        var searchResults = this.get('searchResults');\n\n        return !Ember.isEmpty(searchResults) ? searchResults.length : 0;\n    }.property('searchResults'),\n    isAllLocations: Ember.computed.equal('selectedLocation', 'All locations'),\n    isNear: Ember.computed.equal('selectedLocation', 'Near...'),\n    isNearMe: Ember.computed.equal('selectedLocation', 'Near me'),\n    isRemote: Ember.computed.equal('selectedLocation', 'Remote/Telecommute'),\n    actions: {\n        clickSearch: function() {\n            this.search(true);\n        }\n    },\n    findLocation: function(callback, searchTerm){\n        var self = this;\n        $.ajax({\n            url: 'https://maps.googleapis.com/maps/api/geocode/json?address=' + searchTerm +'&key=' + self.get('apiKey')\n        }).done(callback)\n    },\n    search: function(showResultsCount) {\n        this.set('isSearching', true);\n\n        var self = this;\n\n        var searchObj = this.getProperties('searchTerm', 'selectedLocation', 'selectedJobFamily', \n                                            'nearValue', 'selectedRadius', 'selectedUnit');\n\n        var callback = function(res, evt) {\n            self.set('isSearching', false);\n            if (res) {\n                var parsedResult = parseResult(res);\n\n                var jobPostings = parsedResult.data.jobPostings;\n\n                jobPostings.forEach(function(jp) {\n                    // Build location string\n                    if (!Ember.isEmpty(jp.locations)) {\n                        var firstLocationString = '';\n                        var otherLocationsString;\n                        var otherLocationsCount = 0;\n                        jp.locations.forEach(function(l, i) {\n                            var location = '';\n\n                            location = l.Location__r.City__c + ', ' + l.Location__r.State_Province__c;\n\n                            if (!Ember.isEmpty(l.Location__r.Country_Province__c) && l.Location__r.Country_Province__c !== 'United States') {\n                                location += ', ' + l.Location__r.Country_Province__c;\n                            }\n\n                            if (i === 0) {\n                                firstLocationString = location;\n                            } else if (i === 1) {\n                                otherLocationsCount++;\n                                otherLocationsString = location;\n                            } else {\n                                otherLocationsCount++;\n                                otherLocationsString += ', ' + location;\n                            }\n                        });\n\n                        jp.firstLocationString = firstLocationString;\n                        jp.otherLocationsString = otherLocationsString;\n                        jp.otherLocationsCount = otherLocationsCount;\n                    }\n                    \n                    // Build display\n                    jp.fieldsToDisplay = [];\n                    self.get('jobPostingFieldsToDisplay').forEach(function(field) {\n                        jp.fieldsToDisplay.addObject({\n                            label: field.label,\n                            value: field.type === 'DATE' ? moment(jp[field.name]).format('MMM D, YYYY') : jp[field.name]\n                        });\n                    });\n                });\n                \n                self.set('showResultsCount', showResultsCount);\n\n                self.set('searchResults', jobPostings);\n                console.log('JOB POSTINGS');\n                console.log(jobPostings);\n            } else {\n\n            }\n        };\n\n        if (searchObj.selectedLocation === 'Near me') {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    searchObj.latitude = position.coords.latitude;\n                    searchObj.longitude = position.coords.longitude;\n\n                    console.log(searchObj);\n                    cont.searchJobs(JSON.stringify(searchObj), callback);\n                });\n            } else {\n                x.innerHTML = \"Geolocation is not supported by this browser.\";\n            }\n        } else if (searchObj.selectedLocation === 'Near...') {\n            var googleCallback = function(results) {\n                var location = results.results[0];\n\n                searchObj.latitude = location.geometry.location.lat\n                searchObj.longitude = location.geometry.location.lng;\n\n                cont.searchJobs(JSON.stringify(searchObj), callback);\n            };\n\n            this.findLocation(googleCallback, this.get('nearValue'));\n        } else {\n            cont.searchJobs(JSON.stringify(searchObj), callback);\n        }\n    }\n});\n\n\n\nApp.JobPostingController = Ember.ObjectController.extend({\n    needs: ['jobSearch'],\n    \n    loggedInUserBinding: 'controllers.jobSearch.loggedInUser',\n    applicationsBinding: 'controllers.jobSearch.applications',\n    savedJobsBinding: 'controllers.jobSearch.savedJobs',\n    allMyJobsBinding: 'controllers.jobSearch.allMyJobs',\n\n    isJobSaved: function(){\n        var jobPostingId = this.get('Id');\n        var savedJobs = this.get('savedJobs');\n        // var applications = this.get('applications');\n        // var allMyJobs = this.get('allMyJobs');\n\n        var savedJobsIds = [];\n        if (savedJobs) {\n            savedJobsIds = savedJobs.getEach('jobPostingId');\n        };\n\n        return savedJobsIds.indexOf(jobPostingId) != -1 ? true : false;\n    }.property('Id', 'savedJobs'),\n\n    isJobAppliedCompleted: function(){\n        //var jobPostingId = this.get('Id');\n        var applications = this.get('applications');\n\n        return applications.filterBy('jobPosting', this.get('Id')).isAny('statusText', 'Applied');\n    }.property('Id', 'applications'),\n\n    isJobAppliedInProgress: function(){\n        var applications = this.get('applications');\n\n        return applications.filterBy('jobPosting', this.get('Id')).isAny('statusText', 'In Progress');\n    }.property('Id', 'applications'),\n\n\n    jobPostingUrl: function() {\n        return parent.urlPrefix + '/JobPosting?id=' + this.get('Id');\n    }.property('Id'),\n\n    actions: {\n        clickApply: function() {\n            window.parent.location.href = this.get('jobPostingUrl');\n            console.log(this.get('Id'));\n        },\n        finishApplication: function(jobPosting){\n            //var applications = this.get('applications');\n            var applicationId = this.get('applications').filterBy('jobPosting', this.get('Id'))[0].id;\n\n            var url = 'https://victortestcommunity3-developer-edition.na16.force.com/dreamjob/apply?id=' + applicationId;\n            //window.parent.location.replace(url); \n            window.parent.location.href = url;\n        },\n        saveJob: function(jobPosting){\n            var self = this;\n            console.log('JOB POSTING: ');\n            console.log(jobPosting);\n\n\n            if (this.get('loggedInUser').UserType !== 'Guest') {\n                if(!self.get('isJobSaved')){\n                    var jsonString = {\n                        Job_Posting__c: jobPosting.Id,\n                        Name: jobPosting.Name,\n                        Candidate__c: self.get('loggedInUser').Id,\n                        Expressed_By__c: 'Candidate', // Picklist\n                        Orig_Requisition__c: jobPosting.Requisition__c,\n                        Position__c: jobPosting.Requisition__r.Position__c,\n                        locations: jobPosting.locations\n                    };\n\n                    cont.saveJob(JSON.stringify(jsonString), function(results, responseObj){\n                        if (results) {\n                            var parsedResult = parseResult(results);\n                            console.log('RESULTS: ');\n                            console.log(parsedResult);\n                            console.log(parsedResult.data.newJobId);\n                            \n                            // if (parsedResult.isSuccess) {\n                            // Check if new Interest was created\n                            if (parsedResult.data.newJobId) {\n\n                                self.set('isJobSaved', true);\n                                var obj = createLocationStrings(jsonString.locations);\n\n                                var newJob = {\n                                    jobTitle: jsonString.Name,\n                                    firstLocationString: obj.firstLocationString,\n                                    otherLocationsString: obj.otherLocationsString,\n                                    otherLocationsCount: obj.otherLocationsCount,\n                                    jobPostingUrl: parent.urlPrefix + '/JobPosting?id=' + jsonString.Job_Posting__c\n                                };\n\n                                var savedJobs = self.get('savedJobs');\n                                savedJobs.addObject(newJob);\n                                self.get('controllers.jobSearch').notifyPropertyChange('savedJobs');\n                            };\n\n                        } else {\n                                // error handling\n                        }\n                    });\n                }\n               \n            } else {\n                console.log('NOT LOGED IN')\n                var self = this;\n\n                $('#pleaseLoginModal').modal({\n                    show: true,\n                    backdrop: 'static'\n                });\n\n                window.parent.scrollTo(0,0);\n\n                $('#modalOk').click(function() {\n                    var url = 'https://victortestcommunity3-developer-edition.na16.force.com/dreamjob/s/Login/';\n                    //window.parent.location.replace(url);\n                    window.parent.location.href = url;\n                    $('#modalOk').unbind('click');\n                });\n            };      \n        },\n    }\n});\n\n// Routes\nApp.JobSearchRoute = Ember.Route.extend( {\n    model: function(params) {\n        console.log('JOB SEARCH MAP');\n        console.log(parsedJobSearchMap);\n\n        var jobFamilies = ['All categories'];\n\n        if (!Ember.isEmpty(parsedJobSearchMap.jobFamilies)) {\n            jobFamilies.addObjects(parsedJobSearchMap.jobFamilies.getEach('value'));\n        }\n\n        var applications = [];\n\n        if (!Ember.isEmpty(parsedJobSearchMap.applications)) {\n            parsedJobSearchMap.applications.forEach(function(app) {\n                var obj = createLocationStrings(app.locations);\n\n                var applicationObj = {\n                    id: app.Id,\n                    jobPosting: app.Job_Posting__c,\n                    jobTitle: app.Job_Posting__r.Name,\n                    firstLocationString: obj.firstLocationString,\n                    otherLocationsString: obj.otherLocationsString,\n                    otherLocationsCount: obj.otherLocationsCount,\n                    jobPostingUrl: parent.urlPrefix + '/JobPosting?id=' + app.Job_Posting__c,\n                    isApplication: true,\n                    hasJobOffer: !Ember.isEmpty(app.Job_Offers__r),\n                    jobOfferStatus: !Ember.isEmpty(app.Job_Offers__r) ? app.Job_Offers__r.records[0].Status__c : null,\n                    statusText: app.Status__c === 'Completed' ? 'Applied' : 'In Progress',\n                    isRemoteAvailable: app.Requisition__r.Allow_Remote_Employees__c\n                };\n\n                if (!Ember.isEmpty(app.Job_Offers__r)) {\n                    if (['Accepted', 'Extended'].indexOf(app.Job_Offers__r.records[0].Status__c) !== -1) {\n                        applicationObj.jobLabelClass = 'label--success';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    }\n                } else {\n                    if (app.Status__c === 'In Progress') {\n                        applicationObj.jobLabelClass = 'label--warning';\n                    } else {\n                        applicationObj.jobLabelClass = 'label--secondary';\n                    }\n                }\n\n                applications.addObject(applicationObj);\n            });\n        }\n\n        // parsedJobSearchMap.applications = applications;\n\n        // parsedJobSearchMap.isRemoteAvailable = parsedJobSearchMap.jobPosting.Requisition__r.Allow_Remote_Employees__c;\n\n        // if (!Ember.isEmpty(parsedJobSearchMap.jpLocations)) {\n        //     var parsedLocations = parsePostingLocations(parsedJobSearchMap.jpLocations, parsedJobSearchMap.isRemoteAvailable);\n        //     parsedJobSearchMap.locationString = parsedLocations.locationsString;\n        //     parsedJobSearchMap.locations = parsedLocations.locationObjs;\n        // }\n\n        // saved jobs\n        var savedJobs = [];\n        if (!Ember.isEmpty(parsedJobSearchMap.savedJobs)) {                \n            parsedJobSearchMap.savedJobs.forEach(function(savedJob) {\n                if (Ember.isNone(savedJob.Application__r) || \n                        (!Ember.isNone(savedJob.Application__r) && savedJob.Application__r.Job_Posting__c !== savedJob.Job_Posting__c)) {\n\n                    var obj = createLocationStrings(savedJob.locations);\n\n                    var jobObj = {\n                        jobPostingId: savedJob.Job_Posting__c,\n                        jobTitle: savedJob.Name,\n                        firstLocationString: obj.firstLocationString,\n                        otherLocationsString: obj.otherLocationsString,\n                        otherLocationsCount: obj.otherLocationsCount,\n                        jobPostingUrl: parent.urlPrefix + '/JobPosting?id=' + savedJob.Job_Posting__c,\n                        //isSavedJob: true\n                    };\n\n                    savedJobs.addObject(jobObj);\n                }\n            });\n        }\n\n        return {\n            radiusOptions: ['5', '10', '25', '50'],\n            radiusUnits: ['mi', 'km'],\n            locations: ['All locations', 'Near...', 'Near me', 'Remote/Telecommute'],\n            jobFamilies: jobFamilies,\n            jobPostingFieldsToDisplay: parsedJobSearchMap.jobPostingFieldsToDisplay,\n            applications: applications,\n            apiKey: parsedJobSearchMap.apiKey,\n            loggedInUser: parsedJobSearchMap.loggedInUser,\n            jobPostings: parsedJobSearchMap.jobPostings,\n            savedJobs: savedJobs\n        };\n    }\n});\n\n// Router\nApp.Router.map(function() {\n    this.resource('jobSearch', { path: '/' });\n});\n\n\n// This setting disables the detail routing from showing up in the navbar.\nApp.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=app/jobSearchProtoApp.js")